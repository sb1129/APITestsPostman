{
  "collection": {
    "_": {
      "postman_id": "e851ee2f-a760-4fde-a819-e5b9f0652b01"
    },
    "item": [
      {
        "id": "cb53aef8-9eeb-456c-a2ed-7150ee1ad55c",
        "name": "CCM",
        "item": [
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "8edb7257-98a7-4c29-8b9a-13998202607b",
            "name": "SwiftEvents",
            "item": [
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "9d6be824-2a47-4340-8c1b-3de7b35c72d0",
                "name": "PullDataFromCsvFiles",
                "item": [
                  {
                    "id": "6a1d113b-e34e-4291-8ba8-653ea4797c40",
                    "name": "No Auth",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "PullDataFromCsvFiles"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b86d8c6-6ea2-4e72-b8cd-a119f0a46132",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "5451191d-f295-4044-a3b7-9128fb141133",
                    "name": "Username and Pasword incorrect",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "PullDataFromCsvFiles"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8df114-c56a-41fb-9d5d-0b70e557c87e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Incorrect Username and Password\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5aa516-8283-41be-a72a-ba947f42625a",
                    "name": "Username and Pasword locked ",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "PullDataFromCsvFiles"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{LockedPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{LockedUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8df114-c56a-41fb-9d5d-0b70e557c87e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Account Locked\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddad7a6d-5d66-4331-a925-855b7d6f28a5",
                    "name": "Username and Pasword new account",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "PullDataFromCsvFiles"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NewPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NewUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8df114-c56a-41fb-9d5d-0b70e557c87e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"New Account\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0adcc24-8133-464f-b712-a4cd4f56bb8f",
                    "name": "Username and Pasword insufficient privileges",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "PullDataFromCsvFiles"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8df114-c56a-41fb-9d5d-0b70e557c87e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Insufficient Privileges\", () => {",
                            "    pm.response.to.have.status(403);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "67011a31-5679-4d9b-93a8-8c50e2a2b360",
                    "name": "Valid test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "PullDataFromCsvFiles"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8df114-c56a-41fb-9d5d-0b70e557c87e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Valid Test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.recordId).to.eql(0);",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.messages[0]).to.equal('PullDataFromCsvFiles[SUCCESS]');",
                            "",
                            "});"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "event": [],
                "protocolProfileBehavior": {}
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "7715b1b4-ba2d-4d54-ba85-fac4525a6269",
                "name": "SyncSwiftEventsToSfCampaigns",
                "item": [
                  {
                    "id": "a747e451-0753-4764-8495-40023ba67e66",
                    "name": "No auth",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncSwiftEventsToSfCampaigns"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e23b7b-81c8-490f-8909-4473f50d623c",
                    "name": "Incorrect Username and Password",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncSwiftEventsToSfCampaigns"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Incorrect Username and Password\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca101e57-7e88-4678-a024-798ef7cdb0e2",
                    "name": "Locked User",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncSwiftEventsToSfCampaigns"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{LockedPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{LockedUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Locked User\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15a7468-41a4-44b5-9d17-15d4d28cfc68",
                    "name": "New Account",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncSwiftEventsToSfCampaigns"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NewPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NewUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"New Account\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e05792-d61e-4293-92ec-63468c1efe8c",
                    "name": "Insufficient Privileges",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncSwiftEventsToSfCampaigns"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Insufficient Privileges\", () => {",
                            "    pm.response.to.have.status(403);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff78f3fe-72ab-4a59-be62-d6faea8a37b0",
                    "name": "Valid Test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncSwiftEventsToSfCampaigns"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Valid Test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "        const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.recordId).to.eql(0);",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.messages[0]).to.equal('SyncSwiftEventsToSfCampaigns[SUCCESS]');",
                            "});"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "event": [],
                "protocolProfileBehavior": {}
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "5c51d79b-3567-459d-8dcf-f708f2f5c506",
                "name": "SyncOpportunitiesOrLeads",
                "item": [
                  {
                    "id": "c91ae0cf-7338-4636-9628-80befb0af56e",
                    "name": "No auth",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncOpportunitiesOrLeads"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fe7a05-77b5-403a-a124-57c2e7bb18da",
                    "name": "Incorrect Username and Password",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncOpportunitiesOrLeads"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Incorrect Username and Password\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ce58b2-68c6-4bc3-a6ff-db0f4f566630",
                    "name": "Locked User",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncOpportunitiesOrLeads"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{LockedPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{LockedUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Locked User\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81f8d31-05fd-4034-8bc1-e9fdab2fc6fc",
                    "name": "New Account",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncOpportunitiesOrLeads"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NewPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NewUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"New Account\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "4707d632-23b8-478f-b51f-858959d963eb",
                    "name": "Insufficient Privileges",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncOpportunitiesOrLeads"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Insufficient Privileges\", () => {",
                            "    pm.response.to.have.status(403);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "2babdc6a-880a-4c82-b6d3-72edea96d79c",
                    "name": "Valid Test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncOpportunitiesOrLeads"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Valid Test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "        const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.recordId).to.eql(0);",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.messages[0]).to.equal('SyncOpportunitiesOrLeads[SUCCESS]');",
                            "});"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d193a0d0-8271-486a-8c4e-3e2dd0c243b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87999d85-669a-4b55-a1b8-da367666d2fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {}
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "46c982d3-6795-48c5-8afe-887e625b81d0",
                "name": "SyncRegistrantStatuses",
                "item": [
                  {
                    "id": "8bbf282f-34f7-4482-ae83-fadf412abaaf",
                    "name": "No auth",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncRegistrantStatuses"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af848af-32ff-4941-97d3-73f169a512ad",
                    "name": "Incorrect Username and Password",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncRegistrantStatuses"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Incorrect Username and Password\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "618f298b-e6d7-4e01-8f29-53f698e1509f",
                    "name": "Locked User",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncRegistrantStatuses"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{LockedPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{LockedUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Locked User\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a88f8a-fdf7-4182-8435-c586ac0a602f",
                    "name": "New Account",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncRegistrantStatuses"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NewPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NewUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"New Account\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c2ea7d-219b-4806-b3fb-0e3f49b182e9",
                    "name": "Insufficient Privileges",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncRegistrantStatuses"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Insufficient Privileges\", () => {",
                            "    pm.response.to.have.status(403);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "927f5e1c-e106-4e00-90b6-432659e37db5",
                    "name": "Valid Test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "SyncRegistrantStatuses"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Valid Test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "        const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.recordId).to.eql(0);",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.messages[0]).to.equal('SyncRegistrantStatuses[SUCCESS]');",
                            "});"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "event": [],
                "protocolProfileBehavior": {}
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "a5753f68-6b42-4d0b-a885-37e0a77d553e",
                "name": "AddConfirmationInteractions",
                "item": [
                  {
                    "id": "bdc8e8a0-f03d-4bcc-9473-141913597e41",
                    "name": "Incorrect Username and Password",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "AddConfirmationInteractions"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Incorrect Username and Password\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de561dc-d07a-419b-b266-d8f31bc9b658",
                    "name": "No auth",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "AddConfirmationInteractions"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82d28df-4b86-4bc9-a023-160dc91d4b9e",
                    "name": "Valid Test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "AddConfirmationInteractions"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Valid Test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "        const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.recordId).to.eql(0);",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f777f2-aeed-4168-b69f-c86d496aaef2",
                    "name": "Locked User",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "AddConfirmationInteractions"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{LockedPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{LockedUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Locked User\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f303687-d637-4925-9eb8-288a81343396",
                    "name": "New Account",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "AddConfirmationInteractions"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NewPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NewUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"New Account\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a55a49-327f-4a41-b513-b6c6559a8e2c",
                    "name": "Insufficient Privileges",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftEvents",
                          "AddConfirmationInteractions"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c2be3-522a-4bf3-9692-d91ca614a209",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Insufficient Privileges\", () => {",
                            "    pm.response.to.have.status(403);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "event": [],
                "protocolProfileBehavior": {}
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c739edba-146e-46e1-9f96-9cf38f583a4c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb60f76c-d25d-4e7b-9a1f-02775075a459",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {}
          },
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "3e812492-c91f-4372-a74c-ff8619fdcfcb",
            "name": "Corresspondence",
            "item": [
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "dec3c93a-5b84-466f-8665-b93914407a32",
                "name": "SyncInteractionsFromEngageOne",
                "item": [
                  {
                    "id": "f6924cd2-4838-4631-9c3a-ee88a28d059c",
                    "name": "No auth",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Correspondence",
                          "SyncInteractionsFromEngageOne"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n\t\"date\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2a11df-7acd-4a6b-b4f3-92341724d5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth Test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "18723aba-94c2-46d5-aeeb-4e50043410de",
                    "name": "Locked user",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Correspondence",
                          "SyncInteractionsFromEngageOne"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n\t\"date\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{LockedPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{LockedUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20ca366-238d-4dbd-b4dc-9e1f9ad00040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Locked User Test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c27f980-a72e-4255-a752-ba094a1a7146",
                    "name": "New User",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Correspondence",
                          "SyncInteractionsFromEngageOne"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n\t\"date\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NewPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NewUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a55106-6b68-41f0-ab98-bbc15ca47bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"New User Test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d29f79-a24e-418e-b52e-d3810ba6e84e",
                    "name": "User with No roles",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Correspondence",
                          "SyncInteractionsFromEngageOne"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n\t\"date\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c58189d-7865-44b6-b641-bc665737b3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No roles assigned user Test\", () => {",
                            "    pm.response.to.have.status(403);",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e74575-34b9-43e2-bb14-05dca6460199",
                    "name": "No Body",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Correspondence",
                          "SyncInteractionsFromEngageOne"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e31787-e67f-47fc-8796-9336a7c94b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Body Test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const data = pm.response.json();",
                            "    ",
                            "    pm.expect(data.recordId).to.eql(0);",
                            "    pm.expect(data.isSuccess).to.be.false;",
                            "    pm.expect(data.messages[0]).to.include(\"A non-empty request body is required.\")",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ccde76-2b5d-4100-aa71-49b3839dfe87",
                    "name": "Blank date",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Correspondence",
                          "SyncInteractionsFromEngageOne"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n\t\"date\":\"\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38322c37-a4e7-42bc-ad17-aaaa603b9807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Blank date Test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const data = pm.response.json();",
                            "    ",
                            "    pm.expect(data.recordId).to.eql(0);",
                            "    pm.expect(data.isSuccess).to.be.false;",
                            "    pm.expect(data.messages[0]).to.include(\"String '' was not recognized as a valid DateTime.\")",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d75fa48-627d-4a93-80b0-1b32bdca3571",
                    "name": "Date not found",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Correspondence",
                          "SyncInteractionsFromEngageOne"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n\t\"date\": \"2021-05-27\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1a518c-a240-476c-84dc-c3e40d911ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Date not found Test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const data = pm.response.json();",
                            "    ",
                            "    pm.expect(data.recordId).to.eql(0);",
                            "    pm.expect(data.isSuccess).to.be.true;",
                            "    pm.expect(data.messages[0]).to.include(\"No JRN files found at \\\\\\\\uat-specfs-01\\\\spectra_files_uat2\\\\docmgmt\\\\corro\\\\CCM_JRN_ARCHIVE\\\\2021-05-27\")",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3df516-fc6b-49bc-817f-ab29179205e3",
                    "name": "Invalid file format",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Correspondence",
                          "SyncInteractionsFromEngageOne"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n\t\"date\": \"2021-05-27\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae16395-7757-4841-ae46-8144358a34eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Date not found Test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const data = pm.response.json();",
                            "    ",
                            "    pm.expect(data.recordId).to.eql(0);",
                            "    pm.expect(data.isSuccess).to.be.true;",
                            "    pm.expect(data.messages[0]).to.include(\"No JRN files found at \\\\\\\\uat-specfs-01\\\\spectra_files_uat2\\\\docmgmt\\\\corro\\\\CCM_JRN_ARCHIVE\\\\2021-05-27\")",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "type": "string",
                      "value": "{{bshree}}",
                      "key": "password"
                    },
                    {
                      "type": "string",
                      "value": "bshree",
                      "key": "username"
                    }
                  ]
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94b88229-218b-473b-a5ea-10c03f31d8ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4b4fa58-ef6d-40af-baee-c16e6e9a6e8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {}
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c3bae07-edeb-4853-be62-eebc8250c55f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b1fe0628-9d8e-4f23-8a93-70770274ef14",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {}
          },
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "a97b039e-184d-40f9-91ae-bd5da84abe94",
            "name": "Actions",
            "item": [
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "1a933944-e246-4437-975f-f2677fc0d502",
                "name": "AddAction",
                "item": [
                  {
                    "id": "34ed55cb-6ce3-4929-8821-0e08ea7c9d26",
                    "name": "No auth",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"2021-07-13\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de0d4a8-8666-46e5-8560-7b94e77fdd28",
                    "name": "Incorrect account",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"2021-07-13\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Incorrect account test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f94df0-3846-44e3-9cff-2f5ee4c0b775",
                    "name": "Locked account",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"2021-07-13\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{LockedPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{LockedUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Locked account test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7df787-03ba-487a-ba05-33ee79546b97",
                    "name": "New User account",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"2021-07-13\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NewPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NewUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"New User account test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0a922b-ac9d-4d05-af0b-afb672ba315c",
                    "name": "No roles assigned account",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"2021-07-13\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No roles account test\", () => {",
                            "    pm.response.to.have.status(403);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a537cd-8fb6-45fe-88fc-98b0be1bcf0c",
                    "name": "No body test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No body test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"A non-empty request body is required.\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e503da7-7aae-43f3-b043-98d426daf4ab",
                    "name": "No client ID test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"2021-07-13\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No body test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Client Id is required\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ea3d4f-0c38-40d2-b25b-dbb766445600",
                    "name": "No source system test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"2021-07-13\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No source system test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Source system is required\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "4460a399-6767-4c07-8053-f0c3103b37da",
                    "name": "No actions test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n\r\n  \"actionDate\": \"2021-07-13\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No Action test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Action is required\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "297d9ed1-6629-4e6c-b08d-d6911e7f4959",
                    "name": "No action date test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n\t\"action\": \"{{$randomBsBuzz}}\",\r\n\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No action date test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Action date is required\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "6547a5f6-2b79-400c-b909-f906a62773a8",
                    "name": "No status test ",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"2021-07-13\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No status test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Status is required\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4a0363-2bc7-4a2a-9b3a-829efb48cdf9",
                    "name": "Empty Strings  test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"\",\r\n  \"action\": \"\",\r\n  \"actionDate\": \"\",\r\n  \"status\": \"\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No status test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Action is required\");",
                            "    pm.expect(jsonData.messages[1]).to.include(\"Status is required\");",
                            "    pm.expect(jsonData.messages[2]).to.include(\"Action date is required\");",
                            "    pm.expect(jsonData.messages[3]).to.include(\"Source system is required\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "8228a7eb-71e5-497a-a9b3-cadc063227f1",
                    "name": "Incorrect source system test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"Ring Central\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"2021-07-13\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Incorrect source system test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Value Ring Central is not allowed for field Source System\");",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8db99d-ef76-4b2e-bce8-47a8ff24943e",
                    "name": "Incorrect action test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"$%#$%#$^%#\",\r\n  \"actionDate\": \"2021-07-13\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Incorrect action test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Action successfully added for client \" + requestBody.clientId);",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f33755f-220b-40a5-a88b-9fd5cdf72069",
                    "name": "Incorrect action date test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"{{incorrectDate}}\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Incorrect action date test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Date \" + requestBody.actionDate + \" is not a valid date\");",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "var moment = require('moment');",
                            "",
                            "incorrectDate = moment().format('DD-MM-YYYY');",
                            "pm.variables.set('incorrectDate', incorrectDate);"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1338fc8-d1e6-4f89-b337-6f769573fdc2",
                    "name": "Future action date test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"{{futureDate}}\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Future action date test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Action date \" + requestBody.actionDate + \" cannot be future date\");",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "var moment = require('moment');",
                            "",
                            "future = moment().add(5,'days').format('YYYY-MM-DD');",
                            "pm.variables.set('future', future);"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3a2b23-e317-4263-ac77-2ee821510e1a",
                    "name": "Current action date test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"{{now}}\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Current action date test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Action successfully added for client \" + requestBody.clientId);",
                            "",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "var moment = require('moment');",
                            "",
                            "now = moment().format('YYYY-MM-DD');",
                            "pm.variables.set('now', now);"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "295f79bc-7b06-49be-a44d-9ce4b289aebe",
                    "name": "Incorrect status test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"{{now}}\",\r\n  \"status\": \"started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Current action date test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Value \" + requestBody.status + \" is not allowed for field Status\");",
                            "",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "var moment = require('moment');",
                            "",
                            "now = moment().format('YYYY-MM-DD');",
                            "pm.variables.set('now', now);"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd7b895-25d1-4f16-a416-e5c89c0850ca",
                    "name": "Valid status action started test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"{{now}}\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Current action date test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "     pm.expect(jsonData.messages[0]).to.include(\"Action successfully added for client \" + requestBody.clientId);",
                            "",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "var moment = require('moment');",
                            "",
                            "now = moment().format('YYYY-MM-DD');",
                            "pm.variables.set('now', now);"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "34338769-14a4-4d13-89a7-198007bd58e8",
                    "name": "Valid status action completed test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"{{now}}\",\r\n  \"status\": \"Action Completed\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Current action date test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "     pm.expect(jsonData.messages[0]).to.include(\"Action successfully added for client \" + requestBody.clientId);",
                            "",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "var moment = require('moment');",
                            "",
                            "now = moment().format('YYYY-MM-DD');",
                            "pm.variables.set('now', now);"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95256bd-38e0-4de6-b344-eb3fdc33d5b6",
                    "name": "Valid test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"SwiftDigital\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDate\": \"{{now}}\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Current action date test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "     pm.expect(jsonData.messages[0]).to.include(\"Action successfully added for client \" + requestBody.clientId);",
                            "",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "var moment = require('moment');",
                            "",
                            "now = moment().format('YYYY-MM-DD');",
                            "pm.variables.set('now', now);"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "event": [],
                "protocolProfileBehavior": {}
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "6a796bbd-4ecc-46c8-9dd7-9b501992c88f",
                "name": "AddActionV2",
                "item": [
                  {
                    "id": "643826b2-4805-4f34-9f1c-569fcad14e83",
                    "name": "No auth",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "});"
                          ],
                          "_lastExecutionId": "a06a5754-a2b3-4cea-926e-79450627d046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c55294c-a56f-4b0a-b0c3-5279b6cd202d",
                    "name": "Incorrect account",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Incorrect account test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ],
                          "_lastExecutionId": "c50c2aac-0786-4a67-80e1-2436a8592b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feda7a77-2f9f-45c3-bb74-2a64be37a64a",
                    "name": "Locked account",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{LockedPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{LockedUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Locked account test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ],
                          "_lastExecutionId": "8e3b8ca2-58f9-4fad-8b8a-c2d1c8af14d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f5f9ae-a7f3-42df-8178-5577f0cfd637",
                    "name": "New User account",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NewPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NewUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"New User account test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ],
                          "_lastExecutionId": "a5081ca3-8bd8-4325-947b-a6c6ee4e6ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858d1a1e-611b-46bf-a265-edafd9f23a8b",
                    "name": "No roles assigned account",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No roles account test\", () => {",
                            "    pm.response.to.have.status(403);",
                            "    ",
                            "});"
                          ],
                          "_lastExecutionId": "91f9c3a7-9b27-4fa7-afa5-4be528944665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be820936-922f-4787-8ffb-0ac7ad03cecc",
                    "name": "No body test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No body test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"A non-empty request body is required.\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    ",
                            "});"
                          ],
                          "_lastExecutionId": "8081d6ee-1a16-41ce-b32a-a676de904d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a11635-0e7c-4904-a116-b8b86d367112",
                    "name": "No client ID test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No body test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Client Id is required\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    ",
                            "});"
                          ],
                          "_lastExecutionId": "1fc04860-9e98-447b-acf8-8c2df856603c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9999ba9e-c1ac-4aed-840d-f2cd692c0311",
                    "name": "No source system test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No source system test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Source system is required\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "346fb3dc-748a-4139-b2a7-8de0dcb9b77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc17120f-d8db-4a51-a141-b98d1b5b930f",
                    "name": "No actions test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n\r\n   \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No Action test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Action is required\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3d4c772c-e535-49cc-ad7a-a61053bfe5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30cd680-2eea-4ccd-9ecc-cde9935f3e39",
                    "name": "No action date test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n\t\"action\": \"{{$randomBsBuzz}}\",\r\n\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No action date test\", () => {",
                            "    pm.response.to.have.status(500);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Value cannot be null. (Parameter 's')\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bff00770-6297-4549-bcd7-d9257469d027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaeb0106-278c-4900-9068-34f1ca3f76af",
                    "name": "No status test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n   \"actionDateTime\": \"2021-07-13 14:29:06\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No status test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Status is required\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "40c010d6-1c46-40c1-93ab-499f66153f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641e54da-ccd9-492a-8ec3-6c34f618296a",
                    "name": "Empty Strings  test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"\",\r\n  \"action\": \"\",\r\n   \"actionDateTime\": \"\",\r\n  \"status\": \"\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"No status test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Action is required\");",
                            "    pm.expect(jsonData.messages[1]).to.include(\"Status is required\");",
                            "   // pm.expect(jsonData.messages[2]).to.include(\"Action date is required\");",
                            "    pm.expect(jsonData.messages[2]).to.include(\"Source system is required\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1f7a4f67-d84e-44d6-9946-dbbf7387461e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329759d3-80dd-4df8-ab09-627e64b87a51",
                    "name": "Incorrect source system test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"Ring Central\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Incorrect source system test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Value Ring Central is not allowed for field Source System\");",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "20f7208c-294a-4841-8661-25f14e0071d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734f467a-db08-44eb-98a5-893388cd9fe7",
                    "name": "Incorrect action test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"$%#$%#$^%#\",\r\n \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Incorrect action test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Action successfully added for client \" + requestBody.clientId);",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "});"
                          ],
                          "_lastExecutionId": "07651800-f24e-4ab3-a682-a4e467276490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513877cf-fbd2-4afa-9428-48d68a6542b8",
                    "name": "Incorrect action date test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"{{incorrectDateTime}}\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Incorrect action date test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Date \" + requestBody.actionDateTime + \" is not a valid datetime\");",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "82652f0b-9866-4b46-9479-516ccdad7cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "var moment = require('moment');",
                            "",
                            "incorrectDateTime = moment().format('DD-MM-YYYY HH:MM:SS');",
                            "pm.variables.set('incorrectDateTime', incorrectDateTime);"
                          ],
                          "_lastExecutionId": "9d0eb482-f824-42cb-82dd-0c747990ee8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605ab6a1-1175-4627-930f-48f60bc212cf",
                    "name": "Future action date test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "V2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n   \"actionDateTime\": \"{{futureDateTime}}\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Future action date test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "    pm.expect(jsonData.messages[0]).to.include(\"ActionDateTime \" + requestBody.actionDateTime + \" cannot be future date\");",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "cac6b0b2-0078-4af3-8946-74aab3640de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "var moment = require('moment');",
                            "",
                            "var futureDateTime = moment().add(5,'days').format('YYYY-MM-DD 00:00:00');",
                            "pm.variables.set('futureDateTime', futureDateTime);"
                          ],
                          "_lastExecutionId": "d15ecd92-706c-4d63-a48b-6c50ca55ee26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1662a24-2737-4d84-9a72-c68bc3f7a0d0",
                    "name": "Current action date test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"{{now}}\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Current action date test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Action successfully added for client \" + requestBody.clientId);",
                            "",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "});"
                          ],
                          "_lastExecutionId": "2d00b497-45b1-497a-a7e8-a78233ae37c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "var moment = require('moment');",
                            "",
                            "now = moment().format('YYYY-MM-DD 00:00:00');",
                            "pm.variables.set('now', now);"
                          ],
                          "_lastExecutionId": "46657d4f-7112-4f6f-a806-d8c685f42f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3b07c6-7212-4346-ad2c-b610522a3ba6",
                    "name": "Incorrect status test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"{{now}}\",\r\n  \"status\": \"started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Current action date test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "    pm.expect(jsonData.messages[0]).to.include(\"Value \" + requestBody.status + \" is not allowed for field Status\");",
                            "",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e0650012-296c-44ae-9f0c-8b53bd45280e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "var moment = require('moment');",
                            "",
                            "now = moment().format('YYYY-MM-DD HH:MM:SS');",
                            "pm.variables.set('now', now);"
                          ],
                          "_lastExecutionId": "dec0acb6-fbfb-4c08-9fa5-03323a32e07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfba414-f22c-4ca1-af55-83b0527410e0",
                    "name": "Valid status action started test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"{{now}}\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Current action date test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "     pm.expect(jsonData.messages[0]).to.include(\"Action successfully added for client \" + requestBody.clientId);",
                            "",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "});"
                          ],
                          "_lastExecutionId": "ec5c70eb-c0d2-4b60-bc45-5046f37b6a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "var moment = require('moment');",
                            "",
                            "now = moment().format('YYYY-MM-DD 00:00:00');",
                            "pm.variables.set('now', now);"
                          ],
                          "_lastExecutionId": "0b5bc030-5ccd-4ea0-878c-f7752f35464c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dbca9b-34af-4790-9d57-0f0edfeee841",
                    "name": "Valid status action completed test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n \"actionDateTime\": \"{{now}}\",\r\n  \"status\": \"Action Completed\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Current action date test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "     pm.expect(jsonData.messages[0]).to.include(\"Action successfully added for client \" + requestBody.clientId);",
                            "",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "});"
                          ],
                          "_lastExecutionId": "16451ad6-1162-4607-b92f-f8329f745138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "var moment = require('moment');",
                            "",
                            "now = moment().format('YYYY-MM-DD 00:00:00');",
                            "pm.variables.set('now', now);"
                          ],
                          "_lastExecutionId": "3f81e8e0-a59f-440d-bd16-887c4b918b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f626d61-d47f-4fd5-b194-e02cce1cec62",
                    "name": "Valid test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Actions",
                          "v2",
                          "AddAction"
                        ],
                        "host": [
                          "{{ccm}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"SwiftDigital\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"{{now}}\",\r\n  \"status\": \"Action started\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test(\"Current action date test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "     ",
                            "    const jsonData = pm.response.json();",
                            "    const requestBody = JSON.parse(pm.request.body);",
                            "     pm.expect(jsonData.messages[0]).to.include(\"Action successfully added for client \" + requestBody.clientId);",
                            "",
                            "",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "});"
                          ],
                          "_lastExecutionId": "f65f2577-2a63-42ec-8657-07881f9c3de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "var moment = require('moment');",
                            "",
                            "now = moment().format('YYYY-MM-DD 00:00:00');",
                            "pm.variables.set('now', now);"
                          ],
                          "_lastExecutionId": "6adb80c0-4fd1-402e-b02e-86876c6d4e8d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "479033af-a596-47f3-bd44-6dc584561958",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f0bc7f5-5c67-4ca5-8e6d-0e6aeb4ae09d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9ff4aa9-22cf-441b-a75d-455ca007957e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67437d94-e6a4-4b13-9412-d61a35e6f3ed"
                    }
                  }
                ],
                "protocolProfileBehavior": {}
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "34e53651-895a-4fb8-9065-f16b36ba6dab",
                "name": "SearchActions",
                "item": [],
                "event": [],
                "protocolProfileBehavior": {}
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "bf09b2b4-9aeb-4752-af16-beec6f976ef9",
                "name": "SyncActionsToSalesforce",
                "item": [],
                "event": [],
                "protocolProfileBehavior": {}
              }
            ],
            "event": [],
            "protocolProfileBehavior": {}
          }
        ],
        "auth": {
          "type": "basic",
          "basic": [
            {
              "type": "string",
              "value": "{{bshree}}",
              "key": "password"
            },
            {
              "type": "string",
              "value": "bshree",
              "key": "username"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a42f94e4-18c6-44ee-a780-d0578a057482",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb0e665a-b17f-45ff-b566-29c73b4fa494"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c89b425f-0052-44ef-a232-c5ce2b236116",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "077feeab-57c3-48f4-a39f-0713ae44053f"
            }
          }
        ],
        "protocolProfileBehavior": {}
      },
      {
        "id": "5198091c-4fc3-4735-b6c5-c7e1ac913a0e",
        "name": "EinsteinAnalyticsData",
        "item": [
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "eb5f173e-e2f2-4031-9d4c-fb74b0a6e895",
            "name": "Einstein",
            "item": [
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "03c88684-1fad-445e-9e90-f65316e1aa76",
                "name": "ExecuteSPEDWHerokuMembers",
                "item": [
                  {
                    "id": "23f3c09c-fa45-4d28-ba9f-fb484cd4eb3d",
                    "name": "No auth test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Einstein",
                          "ExecuteSPEDWHerokuMembers"
                        ],
                        "host": [
                          "{{einsteinanalyticsdata}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"storedProcedureName\": \"\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64d5de7-4e93-46df-9a29-173a0f839134",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84466f33-36dd-49ea-9ba2-bdafd57c1b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a191b05-03d8-40f1-a761-1d105b09ecf7",
                    "name": "Blank stored proc test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Einstein",
                          "ExecuteSPEDWHerokuMembers"
                        ],
                        "host": [
                          "{{einsteinanalyticsdata}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"storedProcedureName\": \"\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64d5de7-4e93-46df-9a29-173a0f839134",
                          "type": "text/javascript",
                          "exec": [
                            "const jsonData = pm.response.json();",
                            "",
                            "pm.test(\"Blank stored proc test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    pm.expect(jsonData.messages[0]).to.equal(\"The StoredProcedureName field is required.\");",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e443851-e9a5-4187-b4ac-908b5e02a51a",
                    "name": "Invalid stored proc test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Einstein",
                          "ExecuteSPEDWHerokuMembers"
                        ],
                        "host": [
                          "{{einsteinanalyticsdata}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"storedProcedureName\": \"[wrk].[usptionSFMemberAnalyticsFlat]\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64d5de7-4e93-46df-9a29-173a0f839134",
                          "type": "text/javascript",
                          "exec": [
                            "const jsonData = pm.response.json();",
                            "",
                            "pm.test(\"Invalid stored proc test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    pm.expect(jsonData.messages[0]).to.equal(\"Could not find stored procedure 'wrk.usptionSFMemberAnalyticsFlat'. [wrk].[usptionSFMemberAnalyticsFlat]\");",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad7dd0f-67f6-404a-9f58-da981591fb6a",
                    "name": "Unauthorised access test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Einstein",
                          "ExecuteSPEDWHerokuMembers"
                        ],
                        "host": [
                          "{{einsteinanalyticsdata}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"storedProcedureName\": \"\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64d5de7-4e93-46df-9a29-173a0f839134",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "",
                            "pm.test(\"Unauthorised access test\", () => {",
                            "    pm.response.to.have.status(403);",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84466f33-36dd-49ea-9ba2-bdafd57c1b48",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.environment.set(\"username\", \"shree\");",
                            "pm.environment.set(\"password\", \"shree\");"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "00222915-af67-47af-8bc2-1b726e846858",
                    "name": "Blank body test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Einstein",
                          "ExecuteSPEDWHerokuMembers"
                        ],
                        "host": [
                          "{{einsteinanalyticsdata}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n\t\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64d5de7-4e93-46df-9a29-173a0f839134",
                          "type": "text/javascript",
                          "exec": [
                            "const jsonData = pm.response.json();",
                            "",
                            "pm.test(\"Blank body test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    pm.expect(jsonData.messages[0]).to.equal(\"The StoredProcedureName field is required.\");",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63765dd-6f11-4df3-b113-5f6b798de24e",
                    "name": "Another valid stored proc test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Einstein",
                          "ExecuteSPEDWHerokuMembers"
                        ],
                        "host": [
                          "{{einsteinanalyticsdata}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"storedProcedureName\": \"[wrk].[uspIntegrationSFMemberAccountTransaction]\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64d5de7-4e93-46df-9a29-173a0f839134",
                          "type": "text/javascript",
                          "exec": [
                            "const jsonData = pm.response.json();",
                            "",
                            "pm.test(\"Another valid stored proc test\", () => {",
                            "    pm.response.to.have.status(500);",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    pm.expect(jsonData.messages[0]).to.equal(\"Procedure or function 'uspIntegrationSFMemberAccountTransaction' expects parameter '@startDate', which was not supplied.\");",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb235b5-c630-4cee-a1ec-077e5dccf838",
                    "name": "Valid ExecuteSPEDWHerokuMembers test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "Einstein",
                          "ExecuteSPEDWHerokuMembers"
                        ],
                        "host": [
                          "{{einsteinanalyticsdata}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"storedProcedureName\": \"[wrk].[uspIntegrationSFMemberAnalyticsFlat]\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64d5de7-4e93-46df-9a29-173a0f839134",
                          "type": "text/javascript",
                          "exec": [
                            "const jsonData = pm.response.json();",
                            "",
                            "pm.test(\"Valid ExecuteSPEDWHerokuMembers request\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "});"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "event": [],
                "protocolProfileBehavior": {}
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bac567c6-000d-48cf-b9a6-247aeaaacf3a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a3badf1-a6d6-4475-ae71-a48e63014570",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {}
          }
        ],
        "auth": {
          "type": "basic",
          "basic": [
            {
              "type": "string",
              "value": "{{bshree}}",
              "key": "password"
            },
            {
              "type": "string",
              "value": "bshree",
              "key": "username"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a39bae8c-50ff-486f-97d8-0bc3c849633c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07a20f7f-f477-4935-828b-d30f5d0f8bce",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ],
        "protocolProfileBehavior": {}
      },
      {
        "id": "09e569e6-2558-4040-80fe-f9c375b51a10",
        "name": "FileConversion",
        "item": [
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "e852321c-1c67-4cad-a235-a27a4a8c91fc",
            "name": "NasFile",
            "item": [
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "a6d9a4bd-50dd-4b8a-a1c3-d802f33558bf",
                "name": "ListInFile",
                "item": [
                  {
                    "id": "9e4c192e-5c6b-455d-abef-1b25b59ae181",
                    "name": "Username and Password incorrect",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "ListInFiles"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b5df77-7ced-4ad2-89e2-b25321ca1cc2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.environment.set(\"username\", \"shree\");",
                            "pm.environment.set(\"password\", \"incorrect\");"
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6acb3d2-52b2-453e-bdc1-a3708695f05d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "e131ac0f-fd6c-47dc-b2d5-237520f97ebb",
                    "name": "Username and Password not provided ",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "ListInFiles"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b5df77-7ced-4ad2-89e2-b25321ca1cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6acb3d2-52b2-453e-bdc1-a3708695f05d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b378691-0994-467f-9c80-1113e8561ef2",
                    "name": "Username and Password new acc",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "ListInFiles"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NewPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NewUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b5df77-7ced-4ad2-89e2-b25321ca1cc2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.environment.set(\"username\", \"TestNewUser\");",
                            "pm.environment.set(\"password\", \"btsWeW$zMmhJIjy\");"
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6acb3d2-52b2-453e-bdc1-a3708695f05d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d411d5-ef22-420e-a0d4-1c6f667940f7",
                    "name": "valid list in files test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "ListInFiles"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "body": {
                        "mode": "raw",
                        "raw": "",
                        "options": {
                          "raw": {}
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb3de75-2698-4923-abce-6d28d0171f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"valid list files test\", () => {",
                            "    const jsonData = pm.response.json();",
                            "    pm.response.to.have.status(200);",
                            "    pm.expect(jsonData.response.directory).is.eql(\"\\\\\\\\uat-specfs-01\\\\spectra_files_uat2\\\\tech1\\\\nas\\\\in\");",
                            "    let length = jsonData.response.files.length;",
                            "   ",
                            "    if (length > 0) {",
                            "        console.log(jsonData.response.files.length + \" Files Returned\")",
                            "        for (var index = 0; index < length; index++)",
                            "        {",
                            "            ",
                            "            if (jsonData.response.files[index].fileSizeBytes === 0) ",
                            "            {",
                            "                console.log(\"Blank file Exists. Blank filename is => \", jsonData.response.files[index].fileName + \" | \" + jsonData.response.files[index].createdDateTimeUtc);",
                            "            }",
                            "            ",
                            "            if ((jsonData.response.files[index].fileName).endsWith('.pdf') )",
                            "            {",
                            "                console.log(\"PDF file Exists. PDF filename is =>\", jsonData.response.files[index].fileName+ \" | \" + jsonData.response.files[index].createdDateTimeUtc);",
                            "            }",
                            "            ",
                            "            if((jsonData.response.files[index].fileName).endsWith('.docx') ||(jsonData.response.files[index].fileName).endsWith('.doc'))",
                            "            {",
                            "                 console.log(\"DOCX / DOC file Exists. Docx filename is =>\", jsonData.response.files[index].fileName + \" | \" + jsonData.response.files[index].createdDateTimeUtc);",
                            "            }",
                            "            if((jsonData.response.files[index].fileName).endsWith('.png') || (jsonData.response.files[index].fileName).endsWith('.jpg') || (jsonData.response.files[index].fileName).endsWith('.bmp'))",
                            "            {",
                            "                console.log(\"Picture file Exists. Docx filename is =>\", jsonData.response.files[index].fileName + \" | \" + jsonData.response.files[index].createdDateTimeUtc);",
                            "            }",
                            "        }",
                            "    }",
                            "    if (length === 0) ",
                            "    {",
                            "         console.log(jsonData.response.files.length + \" Files Exists\")",
                            "    }",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2d41a0-3f08-4d0e-af3d-19184c817637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    }
                  },
                  {
                    "id": "de43edd4-69f6-4080-9438-9db2c8e81124",
                    "name": "Username and Password insufficient privileges acc",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "ListInFiles"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b5df77-7ced-4ad2-89e2-b25321ca1cc2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.environment.set(\"username\", \"TestNoRolesUser\");",
                            "pm.environment.set(\"password\", \"paKAxSI7FAoO52U\");"
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6acb3d2-52b2-453e-bdc1-a3708695f05d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(403);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c43f0e6-b5e8-4c96-818a-bd7dca11f0fd",
                    "name": "Username and Password locked acc",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "ListInFiles"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{LockedPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{LockedUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b5df77-7ced-4ad2-89e2-b25321ca1cc2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.environment.set(\"username\", \"TestLockedUser\");",
                            "pm.environment.set(\"password\", \"shfq6-WNdzdnWseK\");"
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6acb3d2-52b2-453e-bdc1-a3708695f05d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "519b042c-60c0-4f92-9290-ec73e77f674f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d35db42c-cdcb-4a5e-98cc-33e60e119ebe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {}
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "24a13249-9db1-4255-9e56-058abac91349",
                "name": "ListOutFiles",
                "item": [
                  {
                    "id": "04f70eff-d9eb-470f-8c7d-54f7a7fb2d05",
                    "name": "Username and Password new acc",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "ListOutFiles"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NewPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NewUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b5df77-7ced-4ad2-89e2-b25321ca1cc2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.environment.set(\"username\", \"TestNewUser\");",
                            "pm.environment.set(\"password\", \"btsWeW$zMmhJIjy\");"
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6acb3d2-52b2-453e-bdc1-a3708695f05d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "b644e579-64d7-4ca4-be89-c5295c544fbf",
                    "name": "Username and Password insufficient privileges acc",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "ListOutFiles"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b5df77-7ced-4ad2-89e2-b25321ca1cc2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.environment.set(\"username\", \"TestNoRolesUser\");",
                            "pm.environment.set(\"password\", \"paKAxSI7FAoO52U\");"
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6acb3d2-52b2-453e-bdc1-a3708695f05d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(403);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "4faaf463-cdc3-479d-8151-291020b49a34",
                    "name": "Username and Password locked acc",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "ListOutFiles"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{LockedPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{LockedUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b5df77-7ced-4ad2-89e2-b25321ca1cc2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.environment.set(\"username\", \"TestLockedUser\");",
                            "pm.environment.set(\"password\", \"shfq6-WNdzdnWseK\");"
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6acb3d2-52b2-453e-bdc1-a3708695f05d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c79c20-984d-4047-9aaa-85438dee232a",
                    "name": "Username and Password incorrect",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "ListOutFiles"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b5df77-7ced-4ad2-89e2-b25321ca1cc2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.environment.set(\"username\", \"shree\");",
                            "pm.environment.set(\"password\", \"incorrect\");"
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6acb3d2-52b2-453e-bdc1-a3708695f05d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d3a702-0eb4-4471-b0f7-6f44ccecf4e3",
                    "name": "Username and Password not provided",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "ListOutFiles"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b5df77-7ced-4ad2-89e2-b25321ca1cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6acb3d2-52b2-453e-bdc1-a3708695f05d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "",
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa7806b-93f9-4d59-8181-91314d59541e",
                    "name": "valid list out files test",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "ListOutFIles"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "body": {
                        "mode": "raw",
                        "raw": "",
                        "options": {
                          "raw": {}
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277f597c-6ee2-47ec-bc93-0cda16dbbd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a537bc-f9f6-4579-9175-87dde8a656ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"valid list OUT files test\", () => {",
                            "    const jsonData = pm.response.json();",
                            "    pm.response.to.have.status(200);",
                            "    pm.expect(jsonData.response.directory).is.eql(\"\\\\\\\\uat-specfs-01\\\\spectra_files_uat2\\\\tech1\\\\nas\\\\nas_staging\\\\out_staging\");",
                            "    let length = jsonData.response.files.length;",
                            "   ",
                            "    if (length > 0) {",
                            "        console.log(jsonData.response.files.length + \" Files Returned\")",
                            "        for (var index = 0; index < length; index++)",
                            "        {",
                            "            ",
                            "            if (jsonData.response.files[index].fileSizeBytes === 0) ",
                            "            {",
                            "                console.log(\"Blank file Exists. Blank filename is => \", jsonData.response.files[index].fileName);",
                            "            }",
                            "            ",
                            "            if ((jsonData.response.files[index].fileName).endsWith('.pdf') )",
                            "            {",
                            "                console.log(\"PDF file Exists. PDF filename is =>\", jsonData.response.files[index].fileName);",
                            "            }",
                            "            ",
                            "            if((jsonData.response.files[index].fileName).endsWith('.docx') ||(jsonData.response.files[index].fileName).endsWith('.doc'))",
                            "            {",
                            "                 console.log(\"DOCX / DOC file Exists. Docx filename is =>\", jsonData.response.files[index].fileName);",
                            "            }",
                            "            if((jsonData.response.files[index].fileName).endsWith('.png') || (jsonData.response.files[index].fileName).endsWith('.jpg') || (jsonData.response.files[index].fileName).endsWith('.bmp'))",
                            "            {",
                            "                console.log(\"Picture file Exists. Docx filename is =>\", jsonData.response.files[index].fileName);",
                            "            }",
                            "        }",
                            "    }",
                            "    if (length === 0) ",
                            "    {",
                            "         console.log(jsonData.response.files.length + \" Files Exists\")",
                            "    }",
                            "});"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    }
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66a8236c-a43b-418d-94c8-3758585f7704",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4598a5a-6228-44da-9506-9e7ce396eee8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {}
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "d82fc61e-4ac4-4cd1-9bf1-1daacdc255b4",
                "name": "AddInvestmentOption",
                "item": [
                  {
                    "id": "7dfe0f72-8772-42c0-bdd2-52dd3cba2b81",
                    "name": "Only Fund Name is provided",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"fundName\": \"ABCD\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270abbe9-baba-4a73-a40c-d27f8a480703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"When Only Fund Name is provided test\", () => {",
                            "",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(400);",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "",
                            "    pm.expect(jsonData.response[0]).to.eql(\"Fund Id should not be empty\");",
                            "    pm.expect(jsonData.response[1]).to.eql(\"Nas Fund Id should not be empty\");",
                            "    pm.expect(jsonData.error).to.include(\"Fund Id should not be empty\");",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "a097674f-5ebf-4075-adb8-948e3a0fa712",
                    "name": " Only Nas Fund Id is provided",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"nasFundId\": \"QL81\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270abbe9-baba-4a73-a40c-d27f8a480703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"When Only Nas Fund Id is provided test\", () => {",
                            "",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(400);",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "",
                            "    pm.expect(jsonData.response[1]).to.eql(\"Fund Name should not be empty\");",
                            "    pm.expect(jsonData.response[0]).to.eql(\"Fund Id should not be empty\");",
                            "    pm.expect(jsonData.error).to.include(\"Fund Id should not be empty\");",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd4a50f-c334-4bc0-9275-0ffa72122e3c",
                    "name": "Only Fund ID provided",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"fundId\": \"QL81C1\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270abbe9-baba-4a73-a40c-d27f8a480703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"When only Fund ID provided test\", () => {",
                            "",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(400);",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "",
                            "    pm.expect(jsonData.response[0]).to.eql(\"Fund Name should not be empty\");",
                            "    pm.expect(jsonData.response[1]).to.eql(\"Nas Fund Id should not be empty\");",
                            "    pm.expect(jsonData.error).to.include(\"Fund Name should not be empty\");",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a35b28-8d7e-499b-ade6-f0f3c772356f",
                    "name": "Duplicate Nas Fund ID",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"fundId\": \"QL82C1\",\r\n  \"fundName\": \"New CITY DB OPRTIONAL RISK RESRVE\",\r\n  \"nasFundId\": \"QL81C1\",\r\n  \"excludeFromUPFile\": false\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270abbe9-baba-4a73-a40c-d27f8a480703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Nas Fund ID test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(400);",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    pm.expect(jsonData.response[0]).to.eql(\"Duplicated FundId or NasFundId\");",
                            "",
                            "    pm.expect(jsonData.error).to.include(\"Duplicated FundId or NasFundId\");",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56d4837-b14d-4480-8c74-e233601f0207",
                    "name": "Incorrect Username and Password",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "user",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "user",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be5318a-6b15-4740-963d-a16682c5c56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f7f9e8-5a5d-4fcb-8cd9-737b81137f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Incorrect Username and Password test\", ()=>{",
                            "    pm.response.to.have.status(401);",
                            "   ",
                            "})"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e47aef-6ca0-4965-af82-1bf5a7d658ac",
                    "name": "No auth",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270abbe9-baba-4a73-a40c-d27f8a480703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No auth test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb84dd7-cb47-4095-9c7c-90715cc7a11d",
                    "name": "Invalid characters in Nas Fund ID",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"fundId\": \"{{randomId}}\",\r\n  \"fundName\": \"{{FundName}}\",\r\n  \"nasFundId\": \"@#@{{randomId}}@#@#\",\r\n  \"excludeFromUPFile\": false\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270abbe9-baba-4a73-a40c-d27f8a480703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Invalid characters in Fund ID test\", () => {",
                            "    console.log(\"New record of Fund Id \"+ pm.environment.get(\"randomId\") + \" created and Test Started...\");",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    var random = pm.environment.get(\"randomId\");",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    console.log(\"Valid Response code: \" + jsonData.httpStatusCode);",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.response.message).to.include(\"Unable to add record\" );",
                            "    console.log(\"Correct message validated: \" + jsonData.response.message);",
                            "    ",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "    console.log(\"Test completed\");",
                            "    ",
                            "    //Delete the created record - ",
                            "    if (pm.expect(jsonData.isSuccess).to.be.true) ",
                            "    {",
                            "        console.log(\"Starting deletion of created FundId \"+ pm.environment.get(\"randomId\")+ \"....\");",
                            "        const delRequest = {",
                            "        url: 'https://intg-mcro.internal.lgsuper.org/fileconversion/api/NasFile/RemoveInvestmentOption?fundID='+ pm.environment.get(\"randomId\") +'&nasFundID='+ pm.environment.get(\"randomId\"),",
                            "        method: 'DELETE',",
                            "        header: {",
                            "            'accept': 'text/plain',",
                            "            'Authorization': 'Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw=='",
                            "        }};",
                            "        pm.sendRequest(delRequest, (error, response) => {",
                            "        console.log(\"Created Fund Id \" + pm.environment.get(\"randomId\")+ \" Record successfully deleted after test\", error ? error : response.json());",
                            "        });",
                            "    }",
                            "",
                            "});",
                            "",
                            "    ",
                            ""
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f70ff3-74ac-47b7-b6d0-9d137c7d1fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcfcafe-3176-4f70-91f6-783c6df7df68",
                    "name": "Duplicate Fund ID",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"fundId\": \"QL18C1\",\r\n  \"fundName\": \"ABCD\",\r\n  \"nasFundId\": \"QL81\",\r\n  \"excludeFromUPFile\":false\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270abbe9-baba-4a73-a40c-d27f8a480703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Fund ID test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(400);",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    pm.expect(jsonData.response[0]).to.eql(\"Duplicated FundId or NasFundId\");",
                            "",
                            "    pm.expect(jsonData.error).to.include(\"Duplicated FundId or NasFundId\");",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f64e50e-804c-4670-ab9e-14f6cd4f8bb3",
                    "name": "User with no access",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be5318a-6b15-4740-963d-a16682c5c56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f7f9e8-5a5d-4fcb-8cd9-737b81137f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"User with no access\", ()=>{",
                            "    pm.response.to.have.status(403);",
                            "   ",
                            "})"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "25308541-ac26-48a9-a7d5-f1a6f4910823",
                    "name": "User locked",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{LockedPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{LockedUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be5318a-6b15-4740-963d-a16682c5c56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f7f9e8-5a5d-4fcb-8cd9-737b81137f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Locked user\", ()=>{",
                            "    pm.response.to.have.status(401);",
                            "   ",
                            "})"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a4f4d5-9d74-420b-a775-f99bc806b592",
                    "name": "Invalid characters in Fund Name",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"fundId\": \"{{randomId}}\",\r\n  \"fundName\": \"$@#${{FundName}}#$#$#\",\r\n  \"nasFundId\": \"{{randomId}}\",\r\n  \"excludeFromUPFile\": false\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270abbe9-baba-4a73-a40c-d27f8a480703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Invalid characters in Fund Name test\", () => {",
                            "   console.log(\"New record of Fund Id \"+ pm.environment.get(\"randomId\") + \" created and Test Started...\");",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    var random = pm.environment.get(\"randomId\");",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    console.log(\"Valid Response code: \" + jsonData.httpStatusCode);",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.response.message).to.include(\"New record successfully added - 'Investment option \" + random  + \" successfully added - ID\" );",
                            "    console.log(\"Correct message validated: \" + jsonData.response.message);",
                            "    ",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "    console.log(\"Test completed\");",
                            "    ",
                            "    //Delete the created record - ",
                            "    if (pm.expect(jsonData.isSuccess).to.be.true) ",
                            "    {",
                            "        console.log(\"Starting deletion of created FundId \"+ pm.environment.get(\"randomId\")+ \"....\");",
                            "        const delRequest = {",
                            "        url: 'https://intg-mcro.internal.lgsuper.org/fileconversion/api/NasFile/RemoveInvestmentOption?fundID='+ pm.environment.get(\"randomId\") +'&nasFundID='+ pm.environment.get(\"randomId\"),",
                            "        method: 'DELETE',",
                            "        header: {",
                            "            'accept': 'text/plain',",
                            "            'Authorization': 'Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw=='",
                            "        }};",
                            "        ",
                            "        pm.sendRequest(delRequest, (error, response) => {",
                            "        console.log(\"Created Fund Id \" + pm.environment.get(\"randomId\")+ \" Record successfully deleted after test\", error ? error : response.json());",
                            "        });",
                            "    }",
                            "",
                            "});",
                            ""
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f70ff3-74ac-47b7-b6d0-9d137c7d1fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6664d2-a3d9-499b-b50f-a9ba2666c54f",
                    "name": "New User",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NewPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NewUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be5318a-6b15-4740-963d-a16682c5c56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f7f9e8-5a5d-4fcb-8cd9-737b81137f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"New User\", ()=>{",
                            "    pm.response.to.have.status(401);",
                            "   ",
                            "})"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2aaac0-cb09-462c-a19b-a9e0eb488bb5",
                    "name": "Empty Request body",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270abbe9-baba-4a73-a40c-d27f8a480703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Empty Request body test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(400);",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    pm.expect(jsonData.response[0]).to.eql(\"Fund Id should not be empty\");",
                            "    pm.expect(jsonData.response[1]).to.eql(\"Fund Name should not be empty\");",
                            "    pm.expect(jsonData.response[2]).to.eql(\"Nas Fund Id should not be empty\");",
                            "    pm.expect(jsonData.error).to.include(\"Fund Id should not be empty\");",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "622e0230-e7df-4c8c-b41a-c3711aaf8237",
                    "name": "Empty input fields",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"fundId\": \"\",\r\n  \"fundName\": \"\",\r\n  \"nasFundId\": \"\",\r\n  \"excludeFromUPFile\": false\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270abbe9-baba-4a73-a40c-d27f8a480703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Empty input fields test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(400);",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    pm.expect(jsonData.response[0]).to.eql(\"Fund Id should not be empty\");",
                            "    pm.expect(jsonData.response[1]).to.eql(\"Fund Name should not be empty\");",
                            "    pm.expect(jsonData.response[2]).to.eql(\"Nas Fund Id should not be empty\");",
                            "    pm.expect(jsonData.error).to.include(\"Fund Id should not be empty\");",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "984f139d-1c7c-4b22-af7f-462a47aab1d2",
                    "name": "Invalid characters in Fund ID",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"fundId\": \"%%{{randomId}}#$\",\r\n  \"fundName\": \"{{FundName}}\",\r\n  \"nasFundId\": \"{{randomId}}\",\r\n  \"excludeFromUPFile\": false\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270abbe9-baba-4a73-a40c-d27f8a480703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Invalid characters in Fund ID test\", () => {",
                            "    console.log(\"New record of Fund Id \"+ pm.environment.get(\"randomId\") + \" created and Test Started...\");",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    var random = pm.environment.get(\"randomId\");",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    console.log(\"Valid Response code: \" + jsonData.httpStatusCode);",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.response.message).to.include(\"Unable to add record\" );",
                            "    console.log(\"Correct message validated: \" + jsonData.response.message);",
                            "    ",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "    console.log(\"Test completed\");",
                            "    ",
                            "    //Delete the created record - ",
                            "    if (pm.expect(jsonData.isSuccess).to.be.true) ",
                            "    {",
                            "        console.log(\"Starting deletion of created FundId \"+ pm.environment.get(\"randomId\")+ \"....\");",
                            "        const delRequest = {",
                            "        url: 'https://intg-mcro.internal.lgsuper.org/fileconversion/api/NasFile/RemoveInvestmentOption?fundID='+ pm.environment.get(\"randomId\") +'&nasFundID='+ pm.environment.get(\"randomId\"),",
                            "        method: 'DELETE',",
                            "        header: {",
                            "            'accept': 'text/plain',",
                            "            'Authorization': 'Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw=='",
                            "        }};",
                            "        pm.sendRequest(delRequest, (error, response) => {",
                            "        console.log(\"Created Fund Id \" + pm.environment.get(\"randomId\")+ \" Record successfully deleted after test\", error ? error : response.json());",
                            "        });",
                            "    }",
                            "",
                            "});",
                            "",
                            "    ",
                            ""
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f70ff3-74ac-47b7-b6d0-9d137c7d1fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed152b4-641f-401b-8ad7-a5023e75e6b5",
                    "name": "Valid all",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"fundId\": \"{{randomId}}\",\r\n  \"fundName\": \"{{FundName}}\",\r\n  \"nasFundId\": \"{{randomId}}\",\r\n  \"excludeFromUPFile\": false\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270abbe9-baba-4a73-a40c-d27f8a480703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"All valid parameters test\", () => {",
                            "    console.log(\"New record of Fund Id \"+ pm.environment.get(\"randomId\") + \" created and Test Started...\");",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    var random = pm.environment.get(\"randomId\");",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    console.log(\"Valid Response code: \" + jsonData.httpStatusCode);",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.response.message).to.include(\"New record successfully added - 'Investment option \" + random  + \" successfully added - ID\" );",
                            "    console.log(\"Correct message validated: \" + jsonData.response.message);",
                            "    ",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "    console.log(\"Test completed\");",
                            "    ",
                            "    //Delete the created record - ",
                            "    if (pm.expect(jsonData.isSuccess).to.be.true) ",
                            "    {",
                            "        console.log(\"Starting deletion of created FundId \"+ pm.environment.get(\"randomId\")+ \"....\");",
                            "        const delRequest = {",
                            "        url: 'https://intg-mcro.internal.lgsuper.org/fileconversion/api/NasFile/RemoveInvestmentOption?fundID='+ pm.environment.get(\"randomId\") +'&nasFundID='+ pm.environment.get(\"randomId\"),",
                            "        method: 'DELETE',",
                            "        header: {",
                            "            'accept': 'text/plain',",
                            "            'Authorization': 'Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw=='",
                            "        }};",
                            "        pm.sendRequest(delRequest, (error, response) => {",
                            "        console.log(\"Created Fund Id \" + pm.environment.get(\"randomId\")+ \" Record successfully deleted after test\", error ? error : response.json());",
                            "        });",
                            "    }",
                            "",
                            "});",
                            ""
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f70ff3-74ac-47b7-b6d0-9d137c7d1fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "6793565a-1217-46aa-b027-355c79ebc801",
                    "name": "Duplicate all",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"fundId\": \"QL18C1\",\r\n  \"fundName\": \"LG AGGRESSIVE ACCUM OPTION\",\r\n  \"nasFundId\": \"LG18C1\",\r\n  \"excludeFromUPFile\": false\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270abbe9-baba-4a73-a40c-d27f8a480703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"All parameters Duplicate test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    var random = pm.environment.get(\"randomId\");",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(400);",
                            "    console.log(\"Valid Response code: \" + jsonData.httpStatusCode);",
                            "    ",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    ",
                            "    pm.expect(jsonData.response[0]).to.include(\"Duplicated FundId or NasFundId\");",
                            "    console.log(\"Correct message validated: \" + jsonData.response[0]);",
                            "    ",
                            "    pm.expect(jsonData.error).to.include(\"Duplicated FundId or NasFundId\");",
                            "    console.log(\"Test completed\");",
                            "",
                            "",
                            "});",
                            "",
                            "    ",
                            ""
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f70ff3-74ac-47b7-b6d0-9d137c7d1fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9361abf-c2b8-40bd-a9f1-eccae0112568",
                    "name": "Duplciate Fund Name",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "AddInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"fundId\": \"{{randomId}}\",\r\n  \"fundName\": \"ABCD\",\r\n  \"nasFundId\": \"{{randomId}}\",\r\n   \"excludeFromUpFile\": false\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270abbe9-baba-4a73-a40c-d27f8a480703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Fund Name test\", () => {",
                            "    console.log(\"New record of Fund Id \"+ pm.environment.get(\"randomId\") + \" created and Test Started...\");",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    var random = pm.environment.get(\"randomId\");",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    console.log(\"Valid Response code: \" + jsonData.httpStatusCode);",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.response.message).to.include(\"New record successfully added - 'Investment option \" + random  + \" successfully added - ID\" );",
                            "    console.log(\"Correct message validated: \" + jsonData.response.message);",
                            "    ",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "    console.log(\"Test completed\");",
                            "    ",
                            "  ",
                            "",
                            "});",
                            "",
                            "    ",
                            ""
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f70ff3-74ac-47b7-b6d0-9d137c7d1fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf979d09-feed-48e0-849e-fc3b31b91d19",
                      "type": "text/javascript",
                      "exec": [
                        "",
                        "var random = makeid(6);",
                        "pm.environment.set(\"randomId\", random);",
                        "",
                        "pm.environment.set(\"FundName\", \"This is a new fund name for \"+pm.environment.get('randomId'));",
                        "",
                        "function makeid(length) {",
                        "    var result           = [];",
                        "    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
                        "    var charactersLength = characters.length;",
                        "    for ( var i = 0; i < length; i++ ) {",
                        "      result.push(characters.charAt(Math.floor(Math.random() * ",
                        " charactersLength)));",
                        "   }",
                        "   return result.join('');",
                        "}"
                      ]
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a7d2c2d-0bc3-4518-a596-ddb972782385",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {}
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "59045862-0f6a-45be-9800-8e6f22b5dd7f",
                "name": "DisplayInvestmentOption",
                "item": [
                  {
                    "id": "b601a40b-30b3-4956-ba76-93c6c4201298",
                    "name": "End  to end test - exclude from up file true",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "nasFundID",
                            "value": "{{randomId}}"
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Display Investment options - End to End Test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    pm.expect(jsonData.response.message).to.be.null;",
                            "    ",
                            "    if (pm.expect(jsonData.response.investmentOptions[0].nasFundId).to.eql(pm.request.url.query.get(\"nasFundID\"))) ",
                            "    {",
                            "        console.log(\"Nas Fund ID \" + (pm.request.url.query.get(\"nasFundID\")) + \" matched.\");",
                            "    }",
                            "      if (pm.expect(jsonData.response.investmentOptions[0].excludeFromUp).to.eql(true)) ",
                            "    {",
                            "        console.log(\"Exclude from UP file \" + (jsonData.response.investmentOptions[0].excludeFromUp) + \" found and valid.\");",
                            "    }",
                            "    ",
                            "    ",
                            "    console.log(\"Fund Id displayed is: \" + jsonData.response.investmentOptions[0].fundId);",
                            "    ",
                            "    ",
                            "    console.log(\"Fund Title displayed is: \" + jsonData.response.investmentOptions[0].fundTitle);",
                            "    ",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "   ",
                            "   //Delete the created record - ",
                            "    if (pm.expect(jsonData.isSuccess).to.be.true) ",
                            "    {",
                            "        console.log(\"Starting deletion of created FundId \"+ pm.environment.get(\"randomId\")+ \"....\");",
                            "        const delRequest = {",
                            "        url: 'https://intg-mcro.internal.lgsuper.org/fileconversion/api/NasFile/RemoveInvestmentOption?fundID='+ pm.environment.get(\"randomId\") +'&nasFundID='+ pm.environment.get(\"randomId\"),",
                            "        method: 'DELETE',",
                            "        header: {",
                            "            'accept': 'text/plain',",
                            "            'Authorization': 'Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw=='",
                            "        }};",
                            "        pm.sendRequest(delRequest, (error, response) => {",
                            "        console.log(\"Created Fund Id \" + pm.environment.get(\"randomId\")+ \" Record successfully deleted after test\", error ? error : response.json());",
                            "        });",
                            "    }",
                            "   ",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a27690a-c636-46c6-925b-065ee8e1ab4c",
                          "type": "text/javascript",
                          "exec": [
                            "const postRequest = {",
                            "        url: pm.environment.get(\"fileconversion\") + '/api/NasFile/AddInvestmentOption',",
                            "        method: 'POST',",
                            "        header: {",
                            "            'accept': 'text/plain',",
                            "            'content-Type': 'application/json',",
                            "            'authorization': 'Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw=='",
                            "        },",
                            "        body: {",
                            "            mode: 'application/json',",
                            "              raw: JSON.stringify(",
                            "                {",
                            "                    fundId: pm.environment.get(\"randomId\"),",
                            "                    fundName: pm.environment.get(\"FundName\"),",
                            "                    nasFundId: pm.environment.get(\"randomId\"),",
                            "                    excludeFromUpFile: true",
                            "                })",
                            "            }",
                            "        };",
                            "",
                            "        pm.sendRequest(postRequest, (error, response) => {",
                            "        console.log(\"Created Fund Id \" + pm.environment.get(\"randomId\")+ \". Record successfully created before test\", error ? error : response.json());",
                            "        });",
                            "",
                            "",
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "953f64d3-bd1b-4466-9740-8bb179d3ee2f",
                    "name": "Valid  FundID only",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundId",
                            "value": "GBCYC1"
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    pm.expect(jsonData.response.message).to.be.null;",
                            "    ",
                            "    if (pm.expect(jsonData.response.investmentOptions[0].fundId).to.eql(pm.request.url.query.get(\"fundId\"))) ",
                            "    {",
                            "        console.log(\"Fund ID \" + (pm.request.url.query.get(\"fundId\")) + \" matched.\");",
                            "    }",
                            "      if (pm.expect(jsonData.response.investmentOptions[0].excludeFromUp).to.eql(false)) ",
                            "    {",
                            "        console.log(\"Exclude from UP file \" + (jsonData.response.investmentOptions[0].excludeFromUp) + \" found and valid.\");",
                            "    }",
                            "    ",
                            "    console.log(\"Nas Fund Id displayed is: \" + jsonData.response.investmentOptions[0].nasFundId);",
                            "    ",
                            "    ",
                            "    console.log(\"Fund Title displayed is: \" + jsonData.response.investmentOptions[0].fundTitle);",
                            "    ",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "   ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db28d2a-77b1-44de-a151-699297ddf3b1",
                    "name": "Valid NasFundID and FundID",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "nasFundId",
                            "value": "LGGBCY"
                          },
                          {
                            "key": "fundId",
                            "value": "GBCYC1"
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    pm.expect(jsonData.response.message).to.be.null;",
                            "    ",
                            "    if (pm.expect(jsonData.response.investmentOptions[0].fundId).to.eql(pm.request.url.query.get(\"fundId\"))) ",
                            "    {",
                            "        console.log(\"Fund ID \" + (pm.request.url.query.get(\"fundId\")) + \" matched.\");",
                            "    }",
                            "    ",
                            "    if (pm.expect(jsonData.response.investmentOptions[0].nasFundId).to.eql(pm.request.url.query.get(\"nasFundId\"))) ",
                            "    {",
                            "        console.log(\"Nas Fund ID \" + (pm.request.url.query.get(\"nasFundId\")) + \" matched.\");",
                            "    }",
                            "    if (pm.expect(jsonData.response.investmentOptions[0].excludeFromUp).to.eql(false)) ",
                            "    {",
                            "        console.log(\"Exclude from UP file \" + (jsonData.response.investmentOptions[0].excludeFromUp) + \" found and valid.\");",
                            "    }",
                            "    ",
                            "    console.log(\"Fund Title displayed is: \" + jsonData.response.investmentOptions[0].fundTitle);",
                            "    ",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "   ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "45122d5a-3f1e-48ad-808e-386220531062",
                    "name": "Non-existing FundID",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "{{randomId}}"
                          },
                          {
                            "key": "nasFundID",
                            "value": ""
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    pm.expect(jsonData.response.message).to.include(\"No records found\");",
                            "    pm.expect(jsonData.response.investmentOptions).to.be.null;",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "   ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f10c25c-134e-4860-9b4e-c5eb5817bd5e",
                    "name": "User with No Roles",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "bTiNIh"
                          },
                          {
                            "key": "nasFundID",
                            "value": "bTiNIh"
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(403);",
                            "",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd892876-8dae-44ed-b693-120587eac815",
                    "name": "No auth",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "bTiNIh"
                          },
                          {
                            "key": "nasFundID",
                            "value": "bTiNIh"
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca9fde7-ac54-4af7-8143-1561111cfcf1",
                    "name": "Valid NasFundID and Invalid FundID",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "nasFundID",
                            "value": "GBCYC1"
                          },
                          {
                            "key": "fundID",
                            "value": "{{randomId}}"
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    pm.expect(jsonData.response.message).to.include(\"No records found\");",
                            "    pm.expect(jsonData.response.investmentOptions).to.be.null;",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "   ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60ab7de-3c99-4da0-a980-73f626a77f33",
                    "name": "Incorrect username and password ",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "bTiNIh"
                          },
                          {
                            "key": "nasFundID",
                            "value": "bTiNIh"
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "incorrecty",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "incorrect",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d40c73d-cb65-485d-8ca6-abc88111e616",
                    "name": "Locked User",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "bTiNIh"
                          },
                          {
                            "key": "nasFundID",
                            "value": "bTiNIh"
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{LockedPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{LockedUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b52b1f-c91f-4ea4-a618-023e93f46500",
                    "name": "New User",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "bTiNIh"
                          },
                          {
                            "key": "nasFundID",
                            "value": "bTiNIh"
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NewPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NewUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8bf610-8daf-41f1-9bf0-b1d7c2f207de",
                    "name": "End  to end test - exclude from up file false",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "nasFundID",
                            "value": "{{randomId}}"
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Display Investment options - End to End Test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    pm.expect(jsonData.response.message).to.be.null;",
                            "    ",
                            "    if (pm.expect(jsonData.response.investmentOptions[0].nasFundId).to.eql(pm.request.url.query.get(\"nasFundID\"))) ",
                            "    {",
                            "        console.log(\"Nas Fund ID \" + (pm.request.url.query.get(\"nasFundID\")) + \" matched.\");",
                            "    }",
                            "      if (pm.expect(jsonData.response.investmentOptions[0].excludeFromUp).to.eql(false)) ",
                            "    {",
                            "        console.log(\"Exclude from UP file \" + (jsonData.response.investmentOptions[0].excludeFromUp) + \" found and valid.\");",
                            "    }",
                            "    ",
                            "    ",
                            "    console.log(\"Fund Id displayed is: \" + jsonData.response.investmentOptions[0].fundId);",
                            "    ",
                            "    ",
                            "    console.log(\"Fund Title displayed is: \" + jsonData.response.investmentOptions[0].fundTitle);",
                            "    ",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "   ",
                            "   //Delete the created record - ",
                            "    if (pm.expect(jsonData.isSuccess).to.be.true) ",
                            "    {",
                            "        console.log(\"Starting deletion of created FundId \"+ pm.environment.get(\"randomId\")+ \"....\");",
                            "        const delRequest = {",
                            "        url: 'https://intg-mcro.internal.lgsuper.org/fileconversion/api/NasFile/RemoveInvestmentOption?fundID='+ pm.environment.get(\"randomId\") +'&nasFundID='+ pm.environment.get(\"randomId\"),",
                            "        method: 'DELETE',",
                            "        header: {",
                            "            'accept': 'text/plain',",
                            "            'Authorization': 'Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw=='",
                            "        }};",
                            "        pm.sendRequest(delRequest, (error, response) => {",
                            "        console.log(\"Created Fund Id \" + pm.environment.get(\"randomId\")+ \" Record successfully deleted after test\", error ? error : response.json());",
                            "        });",
                            "    }",
                            "   ",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a27690a-c636-46c6-925b-065ee8e1ab4c",
                          "type": "text/javascript",
                          "exec": [
                            "const postRequest = {",
                            "        url: pm.environment.get(\"fileconversion\") + '/api/NasFile/AddInvestmentOption',",
                            "        method: 'POST',",
                            "        header: {",
                            "            'accept': 'text/plain',",
                            "            'content-Type': 'application/json',",
                            "            'authorization': 'Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw=='",
                            "        },",
                            "        body: {",
                            "            mode: 'application/json',",
                            "              raw: JSON.stringify(",
                            "                {",
                            "                    fundId: pm.environment.get(\"randomId\"),",
                            "                    fundName: pm.environment.get(\"FundName\"),",
                            "                    nasFundId: pm.environment.get(\"randomId\"),",
                            "                    excludeFromUpFile: false",
                            "                })",
                            "            }",
                            "        };",
                            "",
                            "        pm.sendRequest(postRequest, (error, response) => {",
                            "        console.log(\"Created Fund Id \" + pm.environment.get(\"randomId\")+ \". Record successfully created before test\", error ? error : response.json());",
                            "        });",
                            "",
                            "",
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d1a0ee-8c9d-4a55-8d94-73db89f5cadb",
                    "name": "Blank Parameters",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": ""
                          },
                          {
                            "key": "nasFundID",
                            "value": ""
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const length = pm.response.json().response.investmentOptions.length;",
                            "    console.log(\"No of Investments options records:\" + length);",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b799fc-909e-4f8d-9ea3-e8cd09c0723c",
                    "name": "Non-existing NasFundID",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": ""
                          },
                          {
                            "key": "nasFundID",
                            "value": "{{randomId}}"
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    pm.expect(jsonData.response.message).to.include(\"No records found\");",
                            "    pm.expect(jsonData.response.investmentOptions).to.be.null;",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "   ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc13e507-82fe-4235-82ee-090c8f1b2bb5",
                    "name": "Non-existing both",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "{{randomId}}"
                          },
                          {
                            "key": "nasFundID",
                            "value": "{{randomId}}"
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    pm.expect(jsonData.response.message).to.include(\"No records found\");",
                            "    pm.expect(jsonData.response.investmentOptions).to.be.null;",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "   ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "1391ee2c-ea9a-4f28-baca-21e4decb8d66",
                    "name": "Valid FundID and Invalid NasFundID",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "nasFundID",
                            "value": "{{randomId}}"
                          },
                          {
                            "key": "fundID",
                            "value": "GBCYC1"
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    pm.expect(jsonData.response.message).to.include(\"No records found\");",
                            "    pm.expect(jsonData.response.investmentOptions).to.be.null;",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "   ",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c2b935-ffcb-4e14-87e4-063067bc8b37",
                    "name": "Valid  NasFundID only",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "DisplayInvestmentOptions"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "nasFundID",
                            "value": "LGGBCY"
                          }
                        ],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "accept",
                          "value": "text/plain"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb1012-dbea-413c-862b-7b8b5f63f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    ",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    pm.expect(jsonData.response.message).to.be.null;",
                            "    ",
                            "    if (pm.expect(jsonData.response.investmentOptions[0].nasFundId).to.eql(pm.request.url.query.get(\"nasFundID\"))) ",
                            "    {",
                            "        console.log(\"Nas Fund ID \" + (pm.request.url.query.get(\"nasFundID\")) + \" matched.\");",
                            "    }",
                            "      if (pm.expect(jsonData.response.investmentOptions[0].excludeFromUp).to.eql(false)) ",
                            "    {",
                            "        console.log(\"Exclude from UP file \" + (jsonData.response.investmentOptions[0].excludeFromUp) + \" found and valid.\");",
                            "    }",
                            "    ",
                            "    console.log(\"Fund Id displayed is: \" + jsonData.response.investmentOptions[0].fundId);",
                            "    ",
                            "    ",
                            "    console.log(\"Fund Title displayed is: \" + jsonData.response.investmentOptions[0].fundTitle);",
                            "    ",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "   ",
                            "});"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a04eaaf5-3571-4ae3-9221-5f2df0ce2147",
                      "type": "text/javascript",
                      "exec": [
                        "",
                        "var random = makeid(6);",
                        "pm.environment.set(\"randomId\", random);",
                        "",
                        "pm.environment.set(\"FundName\", \"This is a new fund name for \"+pm.environment.get('randomId'));",
                        "",
                        "function makeid(length) {",
                        "    var result           = [];",
                        "    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
                        "    var charactersLength = characters.length;",
                        "    for ( var i = 0; i < length; i++ ) {",
                        "      result.push(characters.charAt(Math.floor(Math.random() * ",
                        " charactersLength)));",
                        "   }",
                        "   return result.join('');",
                        "}"
                      ]
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3929f0d9-b10a-4f14-9160-c880bbd3dfe7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {}
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "9552d624-c478-4cb2-905d-5fd51b9eb45f",
                "name": "RemoveInvestmentOption",
                "item": [
                  {
                    "id": "6db364d8-d88d-4b4e-bff5-7a2c12a9f5f9",
                    "name": "No auth",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "RemoveInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "{{randomId}}"
                          }
                        ],
                        "variable": []
                      },
                      "method": "DELETE",
                      "body": {
                        "mode": "formdata",
                        "formdata": [],
                        "options": {
                          "formdata": {}
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a8d3-37df-4bb6-bdf6-a6736db66c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c221e-1116-4f1d-aa63-5731f18920b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "082c05e5-a31b-4719-887c-261ec5547312",
                    "name": "Incorrect username and password",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "RemoveInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "{{randomId}}"
                          }
                        ],
                        "variable": []
                      },
                      "method": "DELETE",
                      "body": {
                        "mode": "formdata",
                        "formdata": [],
                        "options": {
                          "formdata": {}
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a8d3-37df-4bb6-bdf6-a6736db66c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Fund Name test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c221e-1116-4f1d-aa63-5731f18920b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa846a3c-5aac-4f9b-9913-ed46cd16a899",
                    "name": "Locked user",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "RemoveInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "{{randomId}}"
                          }
                        ],
                        "variable": []
                      },
                      "method": "DELETE",
                      "body": {
                        "mode": "formdata",
                        "formdata": [],
                        "options": {
                          "formdata": {}
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{LockedPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{LockedUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a8d3-37df-4bb6-bdf6-a6736db66c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Fund Name test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c221e-1116-4f1d-aa63-5731f18920b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbe8ae0-3301-41fe-ad76-045066ba66b8",
                    "name": "New User",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "RemoveInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "{{randomId}}"
                          }
                        ],
                        "variable": []
                      },
                      "method": "DELETE",
                      "body": {
                        "mode": "formdata",
                        "formdata": [],
                        "options": {
                          "formdata": {}
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NewPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NewUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a8d3-37df-4bb6-bdf6-a6736db66c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Fund Name test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "    ",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c221e-1116-4f1d-aa63-5731f18920b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a56d5f-b537-4efe-9e71-26ce7b773fd5",
                    "name": "User with No roles",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "RemoveInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "{{randomId}}"
                          }
                        ],
                        "variable": []
                      },
                      "method": "DELETE",
                      "body": {
                        "mode": "formdata",
                        "formdata": [],
                        "options": {
                          "formdata": {}
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a8d3-37df-4bb6-bdf6-a6736db66c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Fund Name test\", () => {",
                            "    pm.response.to.have.status(403);",
                            "    ",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c221e-1116-4f1d-aa63-5731f18920b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e788f3-5ce5-4426-91ec-e8f8af7bf343",
                    "name": "Blank parameters",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "RemoveInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": null
                          },
                          {
                            "key": "nasFundID",
                            "value": null
                          }
                        ],
                        "variable": []
                      },
                      "method": "DELETE",
                      "body": {
                        "mode": "formdata",
                        "formdata": [],
                        "options": {
                          "formdata": {}
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a8d3-37df-4bb6-bdf6-a6736db66c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Fund Name test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(400);",
                            "    pm.expect(jsonData.response[0]).to.include(\"Fund Id or Nas Fund Id is required\");",
                            "    pm.expect(jsonData.response[1]).to.include(\"FundId should be provided if NasFundId is empty\");",
                            "    pm.expect(jsonData.response[2]).to.include(\"NasFundId should be provided if FundId is empty\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    pm.expect(jsonData.error).to.include(\"Fund Id or Nas Fund Id is required\");",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c221e-1116-4f1d-aa63-5731f18920b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9229f4-2c0c-4356-8ea9-9cbd28cfe5a7",
                    "name": "Non-existing FundID ",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "RemoveInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "{{random}}"
                          },
                          {
                            "key": "nasFundID",
                            "value": "bTiNIh"
                          }
                        ],
                        "variable": []
                      },
                      "method": "DELETE",
                      "body": {
                        "mode": "formdata",
                        "formdata": [],
                        "options": {
                          "formdata": {}
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a8d3-37df-4bb6-bdf6-a6736db66c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Fund Name test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(400);",
                            "    pm.expect(jsonData.response).to.include(\"fundID OR nasFundID not found\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    pm.expect(jsonData.error).to.include(\"fundID OR nasFundID not found\");",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c221e-1116-4f1d-aa63-5731f18920b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "062ac578-207f-41cb-9770-c858fe2249de",
                    "name": "Non-existing Nas FundID",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "RemoveInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "7YF5Kc"
                          },
                          {
                            "key": "nasFundID",
                            "value": "{{random}}"
                          }
                        ],
                        "variable": []
                      },
                      "method": "DELETE",
                      "body": {
                        "mode": "formdata",
                        "formdata": [],
                        "options": {
                          "formdata": {}
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a8d3-37df-4bb6-bdf6-a6736db66c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Fund Name test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(400);",
                            "    pm.expect(jsonData.error).to.include(\"fundID OR nasFundID not found\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    pm.expect(jsonData.response).to.include(\"fundID OR nasFundID not found\");",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c221e-1116-4f1d-aa63-5731f18920b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "71862766-3e7d-44e8-941b-6234e9c54baa",
                    "name": "Non-existing both",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "RemoveInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "{{random}}"
                          },
                          {
                            "key": "nasFundID",
                            "value": "{{random}}"
                          }
                        ],
                        "variable": []
                      },
                      "method": "DELETE",
                      "body": {
                        "mode": "formdata",
                        "formdata": [],
                        "options": {
                          "formdata": {}
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a8d3-37df-4bb6-bdf6-a6736db66c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Fund Name test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(400);",
                            "    pm.expect(jsonData.error).to.include(\"fundID OR nasFundID not found\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    pm.expect(jsonData.response).to.include(\"fundID OR nasFundID not found\");",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c221e-1116-4f1d-aa63-5731f18920b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1d350e-389a-4441-8b4a-9f2ff35a14f2",
                    "name": "Valid FundID only",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "RemoveInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "{{randomId}}"
                          }
                        ],
                        "variable": []
                      },
                      "method": "DELETE",
                      "body": {
                        "mode": "formdata",
                        "formdata": [],
                        "options": {
                          "formdata": {}
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a8d3-37df-4bb6-bdf6-a6736db66c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Fund Name test\", () => {",
                            "",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    pm.expect(jsonData.response.message).to.include(\"Existing record successfully deleted - 'Investment option fundId = \" +  pm.environment.get(\"randomId\") + \", nasFundId =  successfully removed'\");",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c221e-1116-4f1d-aa63-5731f18920b0",
                          "type": "text/javascript",
                          "exec": [
                            "const postRequest = {",
                            "        url: pm.environment.get(\"fileconversion\") + '/api/NasFile/AddInvestmentOption',",
                            "        method: 'POST',",
                            "        header: {",
                            "            'accept': 'text/plain',",
                            "            'content-Type': 'application/json',",
                            "            'authorization': 'Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw=='",
                            "        },",
                            "        body: {",
                            "            mode: 'application/json',",
                            "              raw: JSON.stringify(",
                            "                {",
                            "                    fundId: pm.environment.get(\"randomId\"),",
                            "                    fundName: pm.environment.get(\"FundName\"),",
                            "                    nasFundId: pm.environment.get(\"randomId\")",
                            "                })",
                            "            }",
                            "        };",
                            "",
                            "        pm.sendRequest(postRequest, (error, response) => {",
                            "        console.log(\"Created Fund Id \" + pm.environment.get(\"randomId\")+ \". Record successfully created before test\", error ? error : response.json());",
                            "        console.log(pm.environment.get(\"randomId\"));",
                            "        });",
                            "",
                            "",
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad016145-e343-4850-9e4c-627fb7409eb9",
                    "name": "Valid NasFundID and Invalid FundID",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "RemoveInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "%%{{randomId}}"
                          },
                          {
                            "key": "nasFundID",
                            "value": "7YF5Kc"
                          }
                        ],
                        "variable": []
                      },
                      "method": "DELETE",
                      "body": {
                        "mode": "formdata",
                        "formdata": [],
                        "options": {
                          "formdata": {}
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a8d3-37df-4bb6-bdf6-a6736db66c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Fund Name test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(400);",
                            "    pm.expect(jsonData.error).to.include(\"fundID OR nasFundID not found\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    pm.expect(jsonData.response).to.include(\"fundID OR nasFundID not found\");",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c221e-1116-4f1d-aa63-5731f18920b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd6f191-1790-4fc6-8409-9503ec217830",
                    "name": "Valid FundId and NasFundId",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "RemoveInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "fundID",
                            "value": "{{randomId}}"
                          },
                          {
                            "key": "nasFundID",
                            "value": "{{randomId}}"
                          }
                        ],
                        "variable": []
                      },
                      "method": "DELETE",
                      "body": {
                        "mode": "formdata",
                        "formdata": [],
                        "options": {
                          "formdata": {}
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a8d3-37df-4bb6-bdf6-a6736db66c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Fund Name test\", () => {",
                            "",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    pm.expect(jsonData.response.message).to.include(\"Existing record successfully deleted - 'Investment option fundId = \" +  pm.environment.get(\"randomId\") + \", nasFundId = \" +  pm.environment.get(\"randomId\") + \" successfully removed'\");",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c221e-1116-4f1d-aa63-5731f18920b0",
                          "type": "text/javascript",
                          "exec": [
                            "const postRequest = {",
                            "        url: pm.environment.get(\"fileconversion\") + '/api/NasFile/AddInvestmentOption',",
                            "        method: 'POST',",
                            "        header: {",
                            "            'accept': 'text/plain',",
                            "            'content-Type': 'application/json',",
                            "            'authorization': 'Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw=='",
                            "        },",
                            "        body: {",
                            "            mode: 'application/json',",
                            "              raw: JSON.stringify(",
                            "                {",
                            "                    fundId: pm.environment.get(\"randomId\"),",
                            "                    fundName: pm.environment.get(\"FundName\"),",
                            "                    nasFundId: pm.environment.get(\"randomId\")",
                            "                })",
                            "            }",
                            "        };",
                            "",
                            "        pm.sendRequest(postRequest, (error, response) => {",
                            "        console.log(\"Created Fund Id \" + pm.environment.get(\"randomId\")+ \". Record successfully created before test\", error ? error : response.json());",
                            "        console.log(pm.environment.get(\"randomId\"));",
                            "        });",
                            "",
                            "",
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7123920-b18b-462d-be3b-0b60eaca6677",
                    "name": "Valid NasFundID only",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "RemoveInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "nasFundID",
                            "value": "{{randomId}}"
                          }
                        ],
                        "variable": []
                      },
                      "method": "DELETE",
                      "body": {
                        "mode": "formdata",
                        "formdata": [],
                        "options": {
                          "formdata": {}
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a8d3-37df-4bb6-bdf6-a6736db66c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Fund Name test\", () => {",
                            "",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(200);",
                            "    pm.expect(jsonData.response.message).to.include(\"Existing record successfully deleted - 'Investment option fundId = , nasFundId = \" +  pm.environment.get(\"randomId\") + \" successfully removed'\");",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c221e-1116-4f1d-aa63-5731f18920b0",
                          "type": "text/javascript",
                          "exec": [
                            "const postRequest = {",
                            "        url: pm.environment.get(\"fileconversion\") + '/api/NasFile/AddInvestmentOption',",
                            "        method: 'POST',",
                            "        header: {",
                            "            'accept': 'text/plain',",
                            "            'content-Type': 'application/json',",
                            "            'authorization': 'Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw=='",
                            "        },",
                            "        body: {",
                            "            mode: 'application/json',",
                            "              raw: JSON.stringify(",
                            "                {",
                            "                    fundId: pm.environment.get(\"randomId\"),",
                            "                    fundName: pm.environment.get(\"FundName\"),",
                            "                    nasFundId: pm.environment.get(\"randomId\")",
                            "                })",
                            "            }",
                            "        };",
                            "",
                            "        pm.sendRequest(postRequest, (error, response) => {",
                            "        console.log(\"Created Fund Id \" + pm.environment.get(\"randomId\")+ \". Record successfully created before test\", error ? error : response.json());",
                            "        console.log(pm.environment.get(\"randomId\"));",
                            "        });",
                            "",
                            "",
                            ""
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b12a91-dea0-4f6a-8cd4-8bba9e7639b0",
                    "name": "Valid FundID and Invalid NasFundID",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "NasFile",
                          "RemoveInvestmentOption"
                        ],
                        "host": [
                          "{{fileconversion}}"
                        ],
                        "query": [
                          {
                            "key": "nasFundID",
                            "value": "%%{{randomId}}"
                          },
                          {
                            "key": "fundID",
                            "value": "7YF5Kc"
                          }
                        ],
                        "variable": []
                      },
                      "method": "DELETE",
                      "body": {
                        "mode": "formdata",
                        "formdata": [],
                        "options": {
                          "formdata": {}
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4a8d3-37df-4bb6-bdf6-a6736db66c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Duplicate Fund Name test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.httpStatusCode).to.eql(400);",
                            "    pm.expect(jsonData.error).to.include(\"fundID OR nasFundID not found\");",
                            "    pm.expect(jsonData.isSuccess).to.be.false;",
                            "    pm.expect(jsonData.response).to.include(\"fundID OR nasFundID not found\");",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c221e-1116-4f1d-aa63-5731f18920b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61ee8ffa-a86a-4daf-96b6-dda09b15e0e6",
                      "type": "text/javascript",
                      "exec": [
                        "var random = makeid(6);",
                        "pm.environment.set(\"randomId\", random);",
                        "",
                        "pm.environment.set(\"FundName\", \"This is a new fund name for \"+pm.environment.get('randomId'));",
                        "",
                        "function makeid(length) {",
                        "    var result           = [];",
                        "    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
                        "    var charactersLength = characters.length;",
                        "    for ( var i = 0; i < length; i++ ) {",
                        "      result.push(characters.charAt(Math.floor(Math.random() * ",
                        " charactersLength)));",
                        "   }",
                        "   return result.join('');",
                        "}"
                      ]
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbbcbae3-5464-4f11-a539-556a90895730",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {}
              }
            ],
            "event": [],
            "protocolProfileBehavior": {}
          }
        ],
        "auth": {
          "type": "basic",
          "basic": [
            {
              "type": "string",
              "value": "{{bshree}}",
              "key": "password"
            },
            {
              "type": "string",
              "value": "bshree",
              "key": "username"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed5b4cf4-de8d-4ab0-b563-ee6d13a9bff9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "131d9765-4c1d-4521-a66d-38eb1755e8eb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ],
        "protocolProfileBehavior": {}
      },
      {
        "id": "36afd1c4-5962-467b-83dd-e85f1815759a",
        "name": "Swift",
        "item": [
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "b1653343-7dda-44de-83fc-89ea02ef47e4",
            "name": "SwiftFolderConfiguration",
            "item": [
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "447dc139-326f-423a-a48d-8f8f34b5a1f4",
                "name": "Addfolder",
                "item": [
                  {
                    "id": "e88cc05f-eae2-4e3e-b881-0f2987862ba0",
                    "name": "No Auth",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftFolderConfiguration",
                          "AddFolder"
                        ],
                        "host": [
                          "{{swift}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"swiftFolderName\": \"test123\",\r\n  \"active\": true,\r\n  \"eventType\": \"SHC\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6923622-eb8a-41ff-8f83-6a7a42f6259c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "});"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    }
                  },
                  {
                    "id": "01e51e5f-333b-424a-a214-880f6590ff64",
                    "name": "Incorrect Details",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftFolderConfiguration",
                          "AddFolder"
                        ],
                        "host": [
                          "{{swift}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"swiftFolderName\": \"test123\",\r\n  \"active\": true,\r\n  \"eventType\": \"SHC\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6923622-eb8a-41ff-8f83-6a7a42f6259c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Incorrect user details test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "",
                            "});"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    }
                  },
                  {
                    "id": "1559c9bb-7050-494e-8737-70374f6ecc5a",
                    "name": "Locked User",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftFolderConfiguration",
                          "AddFolder"
                        ],
                        "host": [
                          "{{swift}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"swiftFolderName\": \"test123\",\r\n  \"active\": true,\r\n  \"eventType\": \"SHC\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{LockedPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{LockedUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6923622-eb8a-41ff-8f83-6a7a42f6259c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Incorrect user details test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "",
                            "});"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    }
                  },
                  {
                    "id": "0835e598-3141-4bdd-8039-304efb37fabb",
                    "name": "New User",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftFolderConfiguration",
                          "AddFolder"
                        ],
                        "host": [
                          "{{swift}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"swiftFolderName\": \"test123\",\r\n  \"active\": true,\r\n  \"eventType\": \"SHC\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NewPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NewUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6923622-eb8a-41ff-8f83-6a7a42f6259c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Incorrect user details test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "",
                            "});"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    }
                  },
                  {
                    "id": "d8aeba5d-297d-434e-933d-a8dc7d0825dd",
                    "name": "No access",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftFolderConfiguration",
                          "AddFolder"
                        ],
                        "host": [
                          "{{swift}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "name": "Content-Type",
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "body": {
                        "mode": "raw",
                        "raw": "{\r\n  \"swiftFolderName\": \"test123\",\r\n  \"active\": true,\r\n  \"eventType\": \"SHC\"\r\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5278e2c4-296c-4db1-965c-4a5deffa3e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Incorrect user details test\", () => {",
                            "    pm.response.to.have.status(405);",
                            "});"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    }
                  }
                ],
                "event": [],
                "protocolProfileBehavior": {}
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "c7a2d4c5-794c-40c3-bae4-a79f45a2ca13",
                "name": "Listfolders",
                "item": [
                  {
                    "id": "d008b214-9b81-46bf-9d10-bd744b13ca97",
                    "name": "No Auth",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftFolderConfiguration",
                          "ListFolders"
                        ],
                        "host": [
                          "{{swift}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6923622-eb8a-41ff-8f83-6a7a42f6259c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"No Auth test\", () => {",
                            "    pm.response.to.have.status(400);",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbb0f6d-e355-4f3d-b750-0a3483663978",
                    "name": "Locked User",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftFolderConfiguration",
                          "ListFolders"
                        ],
                        "host": [
                          "{{swift}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{LockedPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{LockedUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6923622-eb8a-41ff-8f83-6a7a42f6259c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Incorrect user details test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f96187-5ee1-484d-b9ca-fc31ba71badd",
                    "name": "Incorrect Details",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftFolderConfiguration",
                          "ListFolders"
                        ],
                        "host": [
                          "{{swift}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "shree",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6923622-eb8a-41ff-8f83-6a7a42f6259c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Incorrect user details test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e5cb9d-de8c-40fb-a1c8-a084dbaa4891",
                    "name": "New User",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftFolderConfiguration",
                          "ListFolders"
                        ],
                        "host": [
                          "{{swift}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NewPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NewUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6923622-eb8a-41ff-8f83-6a7a42f6259c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Incorrect user details test\", () => {",
                            "    pm.response.to.have.status(401);",
                            "",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd90fe5-a6f8-4ff6-9f0b-8bb2c4ccbf91",
                    "name": "No access",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftFolderConfiguration",
                          "ListFolders"
                        ],
                        "host": [
                          "{{swift}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET",
                      "auth": {
                        "type": "basic",
                        "basic": [
                          {
                            "type": "string",
                            "value": "{{NoRolesPassword}}",
                            "key": "password"
                          },
                          {
                            "type": "string",
                            "value": "{{NoRolesUser}}",
                            "key": "username"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5278e2c4-296c-4db1-965c-4a5deffa3e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Incorrect user details test\", () => {",
                            "    pm.response.to.have.status(403);",
                            "});"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "id": "199a6ca6-b307-4be8-9814-1c39786edbb8",
                    "name": "Valid list",
                    "request": {
                      "url": {
                        "path": [
                          "api",
                          "SwiftFolderConfiguration",
                          "ListFolders"
                        ],
                        "host": [
                          "{{swift}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6923622-eb8a-41ff-8f83-6a7a42f6259c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Incorrect user details test\", () => {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    const jsonData = pm.response.json();",
                            "    pm.expect(jsonData.isSuccess).to.be.true;",
                            "    pm.expect(jsonData.error).to.be.null;",
                            "    ",
                            "    const numberOfRecords = jsonData.response.swiftFolderConfigurations.length;",
                            "    ",
                            "    console.log(\"Number of Records:\", numberOfRecords);",
                            "});"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "event": [],
                "protocolProfileBehavior": {}
              }
            ],
            "event": [],
            "protocolProfileBehavior": {}
          }
        ],
        "auth": {
          "type": "basic",
          "basic": [
            {
              "type": "string",
              "value": "{{bshree}}",
              "key": "password"
            },
            {
              "type": "string",
              "value": "bshree",
              "key": "username"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fde1ab87-9239-4b9b-9e48-a06517cdb080",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b4ac04d-6d72-47a8-a692-5dfd25f4714b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ],
        "protocolProfileBehavior": {}
      },
      {
        "id": "106a4675-6f58-4669-b7e0-b682e64997c6",
        "name": "RingCentral",
        "item": [
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "d070322a-67d9-46f5-a1a8-263b8deb1b42",
            "name": "SyncCompanyCallLogs",
            "item": [
              {
                "id": "53da2463-66fd-451c-ac67-8330165015e1",
                "name": "Date time exact value with time zone ",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"dateFrom\": \"2021-07-12T14:10:26.2410000+10:00\",\r\n  \"hours\": 0,\r\n  \"pageSize\": 100\r\n}\r\n",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e89f6c9b-c523-4b3e-8462-ac93e0c77209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Date time exact value with time zone Test \", () => {",
                        "    pm.response.to.have.status(200);",
                        "    ",
                        "    const requestBody  = JSON.parse(pm.request.body);",
                        "    ",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(jsonData.response.message).to.eql(\"Successfully synced company call logs since \" + requestBody.dateFrom);",
                        "    pm.expect(jsonData.isSuccess).to.be.true;",
                        "    pm.expect(jsonData.error).to.be.null;",
                        "",
                        "})"
                      ]
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e36065e1-1d29-4d9e-98fa-d8a1dbf0a322",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  }
                ]
              },
              {
                "id": "f1b98780-bbd5-4768-983d-9401acda8dd8",
                "name": "Delta sync",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"dateFrom\": \"{{todaysDate}}\",\r\n  \"hours\": 24,\r\n  \"pageSize\": 100\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e89f6c9b-c523-4b3e-8462-ac93e0c77209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Delta sync Test\", () => {",
                        "    pm.response.to.have.status(200);",
                        "    ",
                        "    ",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(jsonData.response.message).to.eql(\"Successfully synced company call logs since \" + pm.collectionVariables.get(\"todaysDate\") +\"T00:00:00.0000000\");",
                        "    pm.expect(jsonData.isSuccess).to.be.true;",
                        "    pm.expect(jsonData.error).to.be.null;",
                        "",
                        "})"
                      ]
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e36065e1-1d29-4d9e-98fa-d8a1dbf0a322",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  }
                ]
              },
              {
                "id": "7ecc97c6-0a2e-4fca-a64c-18b0e107ddaf",
                "name": "No auth",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"dateFrom\": \"{{todaysDate}}\",\r\n  \"hours\": 24,\r\n  \"pageSize\": 100\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "auth": {
                    "type": "noauth",
                    "noauth": []
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50e1913f-81f4-47bb-9c35-af3c9ea3ade8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"No Auth test\", () => {",
                        "    pm.response.to.have.status(400);",
                        "",
                        "})"
                      ]
                    }
                  }
                ]
              },
              {
                "id": "ef01aff5-d25d-4a29-a26c-a7158ed44006",
                "name": "Incorrect account",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"dateFrom\": \"{{todaysDate}}\",\r\n  \"hours\": 24,\r\n  \"pageSize\": 100\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "auth": {
                    "type": "basic",
                    "basic": [
                      {
                        "type": "string",
                        "value": "shree",
                        "key": "password"
                      },
                      {
                        "type": "string",
                        "value": "shree",
                        "key": "username"
                      }
                    ]
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3ef6003-d25d-483f-8794-e2bc03215f0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Incorrect account test\", () => {",
                        "    pm.response.to.have.status(401);",
                        "",
                        "})"
                      ]
                    }
                  }
                ]
              },
              {
                "id": "982b7f71-8237-4c3d-9670-a3cef0be444d",
                "name": "Hours ago",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"dateFrom\": null,\r\n  \"hours\": 24,\r\n  \"pageSize\": 100\r\n}\r\n",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e89f6c9b-c523-4b3e-8462-ac93e0c77209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Hours ago Test\", () => {",
                        "    pm.response.to.have.status(200);",
                        "    ",
                        "    const requestBody  = JSON.parse(pm.request.body);",
                        "      const jsonData = pm.response.json();",
                        "    pm.expect(jsonData.response.message).to.include(\"Successfully synced company call logs since \");",
                        "    pm.expect(jsonData.isSuccess).to.be.true;",
                        "    pm.expect(jsonData.error).to.be.null;",
                        "",
                        "})"
                      ]
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e36065e1-1d29-4d9e-98fa-d8a1dbf0a322",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  }
                ]
              },
              {
                "id": "6b629054-bfb4-4c7f-9407-2a0f084c795b",
                "name": "Locked account",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"dateFrom\": \"{{todaysDate}}\",\r\n  \"hours\": 24,\r\n  \"pageSize\": 100\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "auth": {
                    "type": "basic",
                    "basic": [
                      {
                        "type": "string",
                        "value": "{{LockedPassword}}",
                        "key": "password"
                      },
                      {
                        "type": "string",
                        "value": "{{LockedUser}}",
                        "key": "username"
                      }
                    ]
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd7344c6-8545-4ee3-9463-69ea597b61f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Locked account test\", () => {",
                        "    pm.response.to.have.status(401);",
                        "",
                        "})"
                      ]
                    }
                  }
                ]
              },
              {
                "id": "1d0bc040-bb84-4972-8dff-2a194de57ccb",
                "name": "New account",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"dateFrom\": \"{{todaysDate}}\",\r\n  \"hours\": 24,\r\n  \"pageSize\": 100\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "auth": {
                    "type": "basic",
                    "basic": [
                      {
                        "type": "string",
                        "value": "{{NewPassword}}",
                        "key": "password"
                      },
                      {
                        "type": "string",
                        "value": "{{NewUser}}",
                        "key": "username"
                      }
                    ]
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c31dfbef-93f3-4024-8db3-7d9b4ad0ce81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"New account test\", () => {",
                        "    pm.response.to.have.status(401);",
                        "",
                        "})"
                      ]
                    }
                  }
                ]
              },
              {
                "id": "2d31ef78-d8f5-4462-adc0-c9c861ca46a5",
                "name": "Sync all logs",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"dateFrom\": \"2021-01-01\",\r\n  \"hours\": 0,\r\n  \"pageSize\": 100\r\n}\r\n",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e89f6c9b-c523-4b3e-8462-ac93e0c77209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Sync All logs Test\", () => {",
                        "    pm.response.to.have.status(200);",
                        "    ",
                        "    const requestBody  = JSON.parse(pm.request.body);",
                        "      const jsonData = pm.response.json();",
                        "    pm.expect(jsonData.response.message).to.include(\"Successfully synced company call logs since \" + requestBody.dateFrom);",
                        "    pm.expect(jsonData.isSuccess).to.be.true;",
                        "    pm.expect(jsonData.error).to.be.null;",
                        "",
                        "})"
                      ]
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e36065e1-1d29-4d9e-98fa-d8a1dbf0a322",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  }
                ]
              },
              {
                "id": "d1dfa8a4-d29d-4f77-8322-fb25ef5e780f",
                "name": "No access account",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"dateFrom\": \"{{todaysDate}}\",\r\n  \"hours\": 24,\r\n  \"pageSize\": 100\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "auth": {
                    "type": "basic",
                    "basic": [
                      {
                        "type": "string",
                        "value": "{{NoRolesPassword}}",
                        "key": "password"
                      },
                      {
                        "type": "string",
                        "value": "{{NoRolesUser}}",
                        "key": "username"
                      }
                    ]
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e89f6c9b-c523-4b3e-8462-ac93e0c77209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"No access account test\", () => {",
                        "    pm.response.to.have.status(403);",
                        "",
                        "})"
                      ]
                    }
                  }
                ]
              },
              {
                "id": "68ed030f-c1ef-4770-9459-2d02fa24943d",
                "name": "Blank body",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e89f6c9b-c523-4b3e-8462-ac93e0c77209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Blank body test\", () => {",
                        "    pm.response.to.have.status(400);",
                        "    ",
                        "    ",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(jsonData.response[0]).to.eql(\"A non-empty request body is required.\");",
                        "    pm.expect(jsonData.isSuccess).to.be.false;",
                        "    pm.expect(jsonData.error).to.be.null;",
                        "",
                        "})"
                      ]
                    }
                  }
                ]
              },
              {
                "id": "0ad6c213-90d7-4336-a774-7be315d59d64",
                "name": "Negative pagelimit",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"dateFrom\": \"2021-01-01\",\r\n  \"hours\": 0,\r\n  \"pageSize\": -100\r\n}\r\n",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e89f6c9b-c523-4b3e-8462-ac93e0c77209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"negative page limit Test\", () => {",
                        "    pm.response.to.have.status(500);",
                        "    ",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(jsonData.response).to.include(\"An unknown error occurred. Please contact support with the trace identifier included in this response\");",
                        "    pm.expect(jsonData.isSuccess).to.be.false;",
                        "    pm.expect(jsonData.error).to.not.be.empty;",
                        "",
                        "});"
                      ]
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e36065e1-1d29-4d9e-98fa-d8a1dbf0a322",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  }
                ]
              },
              {
                "id": "93b6d984-416f-4a88-a49c-7dc2d5f99697",
                "name": "Blank date from",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"dateFrom\": \"\",\r\n  \"hours\": 24,\r\n  \"pageSize\": 100\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e89f6c9b-c523-4b3e-8462-ac93e0c77209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Blank date field test\", () => {",
                        "    pm.response.to.have.status(400);",
                        "    ",
                        "    ",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(jsonData.response[0]).to.eql(\"The JSON value could not be converted to System.Nullable`1[System.DateTime]. Path: $.dateFrom | LineNumber: 1 | BytePositionInLine: 16.\");",
                        "    pm.expect(jsonData.isSuccess).to.be.false;",
                        "    pm.expect(jsonData.error).to.be.null;",
                        "",
                        "})"
                      ]
                    }
                  }
                ]
              },
              {
                "id": "5dc752a2-110d-4525-b024-e3010fc6f26e",
                "name": "Blank date hour",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"dateFrom\": \"{{todaysDate}}\",\r\n  \"hours\": ,\r\n  \"pageSize\": 100\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e89f6c9b-c523-4b3e-8462-ac93e0c77209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Blank hours test\", () => {",
                        "    pm.response.to.have.status(400);",
                        "    ",
                        "    ",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(jsonData.response[0]).to.eql(\"',' is an invalid start of a value. Path: $.hours | LineNumber: 2 | BytePositionInLine: 11.\");",
                        "    pm.expect(jsonData.isSuccess).to.be.false;",
                        "    pm.expect(jsonData.error).to.be.null;",
                        "",
                        "})"
                      ]
                    }
                  }
                ]
              },
              {
                "id": "a166dc4d-1659-4066-990b-7dcdb63137ea",
                "name": "Negative hours",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"dateFrom\": null,\r\n  \"hours\": -24,\r\n  \"pageSize\": 100\r\n}\r\n",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e89f6c9b-c523-4b3e-8462-ac93e0c77209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Negative Hours Test\", () => {",
                        "    pm.response.to.have.status(200);",
                        "    ",
                        "   const requestBody  = JSON.parse(pm.request.body);",
                        "   const jsonData = pm.response.json();",
                        "    pm.expect(jsonData.response.message).to.include(\"Successfully synced company call logs since \");",
                        "    pm.expect(jsonData.isSuccess).to.be.true;",
                        "    pm.expect(jsonData.error).to.be.null;",
                        "",
                        "",
                        "})"
                      ]
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e36065e1-1d29-4d9e-98fa-d8a1dbf0a322",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  }
                ]
              },
              {
                "id": "1c491a6a-9a11-40c5-b238-a1dcb03532a0",
                "name": "Blank date pagesize",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"dateFrom\": \"{{todaysDate}}\",\r\n  \"hours\": 24,\r\n  \"pageSize\": \r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e89f6c9b-c523-4b3e-8462-ac93e0c77209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Blank pagesize field Test\", () => {",
                        "    pm.response.to.have.status(400);",
                        "    ",
                        "    ",
                        "    const jsonData = pm.response.json();",
                        "    pm.expect(jsonData.response[0]).to.eql(\"'}' is an invalid start of a value. Path: $.pageSize | LineNumber: 4 | BytePositionInLine: 0.\");",
                        "    pm.expect(jsonData.isSuccess).to.be.false;",
                        "    pm.expect(jsonData.error).to.be.null;",
                        "",
                        "})"
                      ]
                    }
                  }
                ]
              },
              {
                "id": "88ac5f80-102e-4aea-9d9d-77f9b363689e",
                "name": "Invalid Date From",
                "request": {
                  "url": {
                    "path": [
                      "api",
                      "CallLog",
                      "SyncCompanyCallLogs"
                    ],
                    "host": [
                      "{{ringcentral}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Content-Type",
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n  \"dateFrom\": \"12-07-2021\",\r\n  \"hours\": 0,\r\n  \"pageSize\": 100\r\n}\r\n",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e89f6c9b-c523-4b3e-8462-ac93e0c77209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Invalid Date from Test\", () => {",
                        "    pm.response.to.have.status(400);",
                        "    ",
                        "    const requestBody  = JSON.parse(pm.request.body);",
                        "      const jsonData = pm.response.json();",
                        "    pm.expect(jsonData.response).to.include(\"The JSON value could not be converted to System.Nullable`1[System.DateTime]. Path: $.dateFrom | LineNumber: 1 | BytePositionInLine: 26.\");",
                        "    pm.expect(jsonData.isSuccess).to.be.false;",
                        "    pm.expect(jsonData.error).to.be.null;",
                        "",
                        "})"
                      ]
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e36065e1-1d29-4d9e-98fa-d8a1dbf0a322",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b3c06c5-cd6c-45e0-ae2a-abb71ba41426",
                  "type": "text/javascript",
                  "exec": [
                    "const moment = require('moment');",
                    "pm.collectionVariables.set(\"todaysDate\", moment().format(\"YYYY-MM-DD\"));",
                    "",
                    "pm.collectionVariables.set(\"todayiso\", moment().format(\"YYYY-MM-DDTHH:MM:SSZ\"));"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {}
          }
        ],
        "auth": {
          "type": "basic",
          "basic": [
            {
              "type": "string",
              "value": "{{bshree}}",
              "key": "password"
            },
            {
              "type": "string",
              "value": "bshree",
              "key": "username"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bda65e00-097d-49ad-a712-96cb0f3b5214",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdcea0bb-4de7-4e8f-b1a8-e6329a19ac69",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ],
        "protocolProfileBehavior": {}
      }
    ],
    "auth": {
      "type": "basic",
      "basic": [
        {
          "type": "string",
          "value": "{{bshree}}",
          "key": "password"
        },
        {
          "type": "string",
          "value": "bshree",
          "key": "username"
        }
      ]
    },
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "4469c3af-cec7-492c-b64c-b8d2d5485b74",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "3e8b3f60-7d69-4f20-8346-16f11dde8e73"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "93221e99-43be-4e2a-96a1-b92ab86ab911",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "e8fc5e27-6cef-4836-bf7f-7cf0518fdb19"
        }
      }
    ],
    "protocolProfileBehavior": {},
    "variable": [
      {
        "id": "b0c76877-4c07-4560-9bb0-ab2a10f7af7e",
        "type": "string",
        "value": "2021-07-14T09:07:42+10:00",
        "key": "todayiso"
      },
      {
        "id": "71f94268-be8d-49d7-bcab-3c7b444bf8a4",
        "type": "string",
        "value": "2021-07-14",
        "key": "todaysDate"
      },
      {
        "id": "002dc9de-79f5-484c-8e19-e22fd9621dab",
        "type": "string",
        "value": "2021-07-24",
        "key": "futureDate"
      }
    ],
    "info": {
      "_postman_id": "e851ee2f-a760-4fde-a819-e5b9f0652b01",
      "name": "RegressionTests",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2021-07-14T01:40:21.500Z",
      "postman_exported_using": "Postman/7.18.1"
    },
    "id": "00a98a20-0bb2-4b24-905e-a9cf2e1c1167",
    "name": "intg",
    "values": [
      {
        "type": "any",
        "value": "https://intg-mcro.internal.lgsuper.org/einsteinanalytics",
        "key": "einsteinanalyticsdata"
      },
      {
        "type": "any",
        "value": "https://intg-mcro.internal.lgsuper.org/fileconversion",
        "key": "fileconversion"
      },
      {
        "type": "any",
        "value": "shree",
        "key": "username"
      },
      {
        "type": "any",
        "value": "incorrect",
        "key": "password"
      },
      {
        "type": "any",
        "value": "TestLockedUser",
        "key": "LockedUser"
      },
      {
        "type": "any",
        "value": "shfq6-WNdzdnWseK",
        "key": "LockedPassword"
      },
      {
        "type": "any",
        "value": "TestNewUser",
        "key": "NewUser"
      },
      {
        "type": "any",
        "value": "btsWeW$zMmhJIjy",
        "key": "NewPassword"
      },
      {
        "type": "any",
        "value": "TestNoRolesUser",
        "key": "NoRolesUser"
      },
      {
        "type": "any",
        "value": "paKAxSI7FAoO52U",
        "key": "NoRolesPassword"
      },
      {
        "type": "any",
        "value": "UTy3VU",
        "key": "randomId"
      },
      {
        "type": "any",
        "value": "This is a new fund name for UTy3VU",
        "key": "FundName"
      },
      {
        "type": "any",
        "value": "00D1m0000008lFX!ARcAQDCdBUCN1z27ixKDs2.IVaT8TQtNqHa9PNE1HLyjsl8Xgx1Vd7apCciBpe517mK1gW.Tpsvb2kmSBlodoEnjn0p0YJKZ",
        "key": "SFToken"
      },
      {
        "type": "any",
        "value": "https://intg-mcro.internal.lgsuper.org/ccm",
        "key": "ccm"
      },
      {
        "type": "any",
        "value": "ehUs$9697fWC-JyL!K",
        "key": "bshree"
      },
      {
        "type": "any",
        "value": "https://intg-mcro.internal.lgsuper.org/swift",
        "key": "swift"
      },
      {
        "type": "any",
        "value": "YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
        "key": "AuthKey"
      },
      {
        "type": "any",
        "value": "https://intg-mcro.internal.lgsuper.org/ringcentral",
        "key": "ringcentral"
      }
    ]
  },
  "globals": {
    "id": "2669630d-2d68-448e-b835-8938f128558e",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 21,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 154,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 21,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 21,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 21,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 21,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 84,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 70,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 36.19047619047619,
      "responseMin": 15,
      "responseMax": 194,
      "responseSd": 39.6083433341765,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1626308597398,
      "completed": 1626308617779
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 21,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "68f8fe86-6f41-4fab-aaae-9087d496832d",
          "httpRequestId": "2d258c2e-2984-4f81-90a5-57bbad2397f1"
        },
        "item": {
          "id": "643826b2-4805-4f34-9f1c-569fcad14e83",
          "name": "No auth",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"No auth test\", () => {",
                  "    pm.response.to.have.status(400);",
                  "    ",
                  "});"
                ],
                "_lastExecutionId": "a06a5754-a2b3-4cea-926e-79450627d046"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "02004c63-ef9e-4962-9bff-ffa074001497",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "166",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"incentivize\",\r\n  \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "576649d2-8eff-44bd-b198-bfebb553c38d",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:18 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 194,
          "responseSize": 0
        },
        "id": "643826b2-4805-4f34-9f1c-569fcad14e83",
        "assertions": [
          {
            "assertion": "No auth test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1852b85b-e72c-4981-bd57-6c442f1339aa",
          "length": 21,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ef286779-2662-4120-b597-be51c524391d"
        },
        "item": {
          "id": "9c55294c-a56f-4b0a-b0c3-5279b6cd202d",
          "name": "Incorrect account",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "type": "string",
                  "value": "shree",
                  "key": "password"
                },
                {
                  "type": "string",
                  "value": "shree",
                  "key": "username"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Incorrect account test\", () => {",
                  "    pm.response.to.have.status(401);",
                  "    ",
                  "});"
                ],
                "_lastExecutionId": "c50c2aac-0786-4a67-80e1-2436a8592b1e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic c2hyZWU6c2hyZWU=",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "134572fb-169b-4da0-b0a5-1a7d2533f59c",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "165",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"whiteboard\",\r\n  \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "shree",
                "key": "password"
              },
              {
                "type": "string",
                "value": "shree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "4395d557-4885-40d9-b44b-f8215d9eb89d",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:19 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 17,
          "responseSize": 0
        },
        "id": "9c55294c-a56f-4b0a-b0c3-5279b6cd202d",
        "assertions": [
          {
            "assertion": "Incorrect account test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5c4c5962-9f1a-42de-b072-e69190a76b4e",
          "length": 21,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fea4d224-cc22-492b-82a7-032f048e28ef"
        },
        "item": {
          "id": "feda7a77-2f9f-45c3-bb74-2a64be37a64a",
          "name": "Locked account",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "type": "string",
                  "value": "{{LockedPassword}}",
                  "key": "password"
                },
                {
                  "type": "string",
                  "value": "{{LockedUser}}",
                  "key": "username"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Locked account test\", () => {",
                  "    pm.response.to.have.status(401);",
                  "    ",
                  "});"
                ],
                "_lastExecutionId": "8e3b8ca2-58f9-4fad-8b8a-c2d1c8af14d0"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic VGVzdExvY2tlZFVzZXI6c2hmcTYtV05kemRuV3NlSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ed296787-72d4-4fcb-ad54-164c0ae18404",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "165",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"envisioneer\",\r\n  \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "shfq6-WNdzdnWseK",
                "key": "password"
              },
              {
                "type": "string",
                "value": "TestLockedUser",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "8359b3c3-839b-465a-a4df-10a2268e4354",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:19 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 16,
          "responseSize": 0
        },
        "id": "feda7a77-2f9f-45c3-bb74-2a64be37a64a",
        "assertions": [
          {
            "assertion": "Locked account test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "413f81f4-326f-48c7-8e3a-7bca2fb0188d",
          "length": 21,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "61124b64-44d0-4d94-847f-c71d4a2acf95"
        },
        "item": {
          "id": "12f5f9ae-a7f3-42df-8178-5577f0cfd637",
          "name": "New User account",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "type": "string",
                  "value": "{{NewPassword}}",
                  "key": "password"
                },
                {
                  "type": "string",
                  "value": "{{NewUser}}",
                  "key": "username"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"New User account test\", () => {",
                  "    pm.response.to.have.status(401);",
                  "    ",
                  "});"
                ],
                "_lastExecutionId": "a5081ca3-8bd8-4325-947b-a6c6ee4e6ae5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic VGVzdE5ld1VzZXI6YnRzV2VXJHpNbWhKSWp5",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "74688d44-87df-440b-a010-b6c1475b2485",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "159",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"drive\",\r\n  \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "btsWeW$zMmhJIjy",
                "key": "password"
              },
              {
                "type": "string",
                "value": "TestNewUser",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "a7bcd0fa-a70e-45fd-a73f-197e3301eca4",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:21 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 15,
          "responseSize": 0
        },
        "id": "12f5f9ae-a7f3-42df-8178-5577f0cfd637",
        "assertions": [
          {
            "assertion": "New User account test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b375ddcb-bfc2-4d38-93ab-39d90c39fe10",
          "length": 21,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "146b36c9-242b-4e35-9e24-1f0880b9cfd2"
        },
        "item": {
          "id": "858d1a1e-611b-46bf-a265-edafd9f23a8b",
          "name": "No roles assigned account",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "type": "string",
                  "value": "{{NoRolesPassword}}",
                  "key": "password"
                },
                {
                  "type": "string",
                  "value": "{{NoRolesUser}}",
                  "key": "username"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"No roles account test\", () => {",
                  "    pm.response.to.have.status(403);",
                  "    ",
                  "});"
                ],
                "_lastExecutionId": "91f9c3a7-9b27-4fa7-afa5-4be528944665"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic VGVzdE5vUm9sZXNVc2VyOnBhS0F4U0k3RkFvTzUyVQ==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ee9f945a-e89a-49e5-b531-616122003b17",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "161",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"engage\",\r\n  \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "paKAxSI7FAoO52U",
                "key": "password"
              },
              {
                "type": "string",
                "value": "TestNoRolesUser",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "d5d5b7bc-a76f-4390-9e33-b301ac7bbe27",
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:22 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 17,
          "responseSize": 0
        },
        "id": "858d1a1e-611b-46bf-a265-edafd9f23a8b",
        "assertions": [
          {
            "assertion": "No roles account test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f0f17e64-5b19-4e34-bbeb-cdb6dd04a076",
          "length": 21,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f3bfe73d-c6c1-4fc6-a759-060c7d093731"
        },
        "item": {
          "id": "be820936-922f-4787-8ffb-0ac7ad03cecc",
          "name": "No body test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"No body test\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "    const jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.messages[0]).to.include(\"A non-empty request body is required.\");",
                  "    pm.expect(jsonData.isSuccess).to.be.false;",
                  "    ",
                  "});"
                ],
                "_lastExecutionId": "8081d6ee-1a16-41ce-b32a-a676de904d29"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "17d97841-cdf9-4b66-b9e6-499cc59c72f9",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "26c4b7e2-cb5b-4752-803c-e06b60f32757",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:22 GMT"
            },
            {
              "key": "Content-Length",
              "value": "85"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              65,
              32,
              110,
              111,
              110,
              45,
              101,
              109,
              112,
              116,
              121,
              32,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              32,
              98,
              111,
              100,
              121,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              46,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 19,
          "responseSize": 85
        },
        "id": "be820936-922f-4787-8ffb-0ac7ad03cecc",
        "assertions": [
          {
            "assertion": "No body test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "90c765b8-af6b-4a39-86aa-7d36d06e6af2",
          "length": 21,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1b1cc3d2-9c10-47a2-8af2-8a18681a3d45"
        },
        "item": {
          "id": "f0a11635-0e7c-4904-a116-b8b86d367112",
          "name": "No client ID test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"No body test\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "    const jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.messages[0]).to.include(\"Client Id is required\");",
                  "    pm.expect(jsonData.isSuccess).to.be.false;",
                  "    ",
                  "});"
                ],
                "_lastExecutionId": "1fc04860-9e98-447b-acf8-8c2df856603c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5c6709ab-44d5-43f5-bff5-75575959af9c",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "140",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"productize\",\r\n \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "e62ee0b1-4403-4b8d-8ec0-9b39bdf2a4c7",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:24 GMT"
            },
            {
              "key": "Content-Length",
              "value": "69"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              67,
              108,
              105,
              101,
              110,
              116,
              32,
              73,
              100,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 34,
          "responseSize": 69
        },
        "id": "f0a11635-0e7c-4904-a116-b8b86d367112",
        "assertions": [
          {
            "assertion": "No body test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "bfaf7651-7212-4c50-9ed1-7a3f934de93d",
          "length": 21,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f912e1b7-5d90-4911-822a-46f452caf5be"
        },
        "item": {
          "id": "9999ba9e-c1ac-4aed-840d-f2cd692c0311",
          "name": "No source system test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"No source system test\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "    const jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.messages[0]).to.include(\"Source system is required\");",
                  "    pm.expect(jsonData.isSuccess).to.be.false;",
                  "});"
                ],
                "_lastExecutionId": "346fb3dc-748a-4139-b2a7-8de0dcb9b77e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2eff1df3-74a2-43aa-8a29-0a592307750d",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "128",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n\r\n  \"action\": \"extend\",\r\n \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "9fe09791-783a-442d-a240-e52b0b38d932",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:24 GMT"
            },
            {
              "key": "Content-Length",
              "value": "73"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              83,
              111,
              117,
              114,
              99,
              101,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 19,
          "responseSize": 73
        },
        "id": "9999ba9e-c1ac-4aed-840d-f2cd692c0311",
        "assertions": [
          {
            "assertion": "No source system test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c7a5d2ee-e2b8-4962-b281-11b45ee892dc",
          "length": 21,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1c495cef-e78d-497b-825b-e0682661dd84"
        },
        "item": {
          "id": "bc17120f-d8db-4a51-a141-b98d1b5b930f",
          "name": "No actions test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n\r\n   \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"No Action test\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "     ",
                  "    const jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.messages[0]).to.include(\"Action is required\");",
                  "    pm.expect(jsonData.isSuccess).to.be.false;",
                  "});"
                ],
                "_lastExecutionId": "3d4c772c-e535-49cc-ad7a-a61053bfe5ea"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0d327555-3f5f-48cd-893b-517cb7118932",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "141",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n\r\n   \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "153eb65f-2fae-4987-b2a7-01c4c438a342",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:26 GMT"
            },
            {
              "key": "Content-Length",
              "value": "66"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              65,
              99,
              116,
              105,
              111,
              110,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 99,
          "responseSize": 66
        },
        "id": "bc17120f-d8db-4a51-a141-b98d1b5b930f",
        "assertions": [
          {
            "assertion": "No Action test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e25bd968-3152-4d08-8597-8428dbeaf28b",
          "length": 21,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "08e1bccb-51fa-4e5c-8a40-6117be398929"
        },
        "item": {
          "id": "a30cd680-2eea-4ccd-9ecc-cde9935f3e39",
          "name": "No action date test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n\t\"action\": \"{{$randomBsBuzz}}\",\r\n\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"No action date test\", () => {",
                  "    pm.response.to.have.status(500);",
                  "    ",
                  "     ",
                  "    const jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.messages[0]).to.include(\"Value cannot be null. (Parameter 's')\");",
                  "    pm.expect(jsonData.isSuccess).to.be.false;",
                  "});"
                ],
                "_lastExecutionId": "bff00770-6297-4549-bcd7-d9257469d027"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ff915a22-92a3-495d-9c6b-b5d3ea0ba712",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "121",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n\t\"action\": \"implement\",\r\n\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "d76f3ed3-0027-4b23-97ee-f880b27ea73a",
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:27 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              86,
              97,
              108,
              117,
              101,
              32,
              99,
              97,
              110,
              110,
              111,
              116,
              32,
              98,
              101,
              32,
              110,
              117,
              108,
              108,
              46,
              32,
              40,
              80,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              32,
              39,
              115,
              39,
              41,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 25,
          "responseSize": 85
        },
        "id": "a30cd680-2eea-4ccd-9ecc-cde9935f3e39",
        "assertions": [
          {
            "assertion": "No action date test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0f04ea39-f5fb-47b5-9e05-bf9c89b30ce3",
          "length": 21,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2827843d-99c7-4036-b6df-dffa565d1adf"
        },
        "item": {
          "id": "aaeb0106-278c-4900-9068-34f1ca3f76af",
          "name": "No status test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n   \"actionDateTime\": \"2021-07-13 14:29:06\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"No status test\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "     ",
                  "    const jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.messages[0]).to.include(\"Status is required\");",
                  "    pm.expect(jsonData.isSuccess).to.be.false;",
                  "});"
                ],
                "_lastExecutionId": "40c010d6-1c46-40c1-93ab-499f66153f06"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0c0dee56-a73d-4d3c-a20a-de9ca7e050f0",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "133",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"optimize\",\r\n   \"actionDateTime\": \"2021-07-13 14:29:06\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "c89f58e9-9183-4561-8669-7e0d9461fdb6",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:27 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 24,
          "responseSize": 66
        },
        "id": "aaeb0106-278c-4900-9068-34f1ca3f76af",
        "assertions": [
          {
            "assertion": "No status test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "875b683a-6ded-4525-a428-1aafa66ea417",
          "length": 21,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "63aae4bd-fd31-4e66-92c9-1d7d554bfeaf"
        },
        "item": {
          "id": "641e54da-ccd9-492a-8ec3-6c34f618296a",
          "name": "Empty Strings  test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"\",\r\n  \"action\": \"\",\r\n   \"actionDateTime\": \"\",\r\n  \"status\": \"\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"No status test\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "     ",
                  "    const jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.messages[0]).to.include(\"Action is required\");",
                  "    pm.expect(jsonData.messages[1]).to.include(\"Status is required\");",
                  "   // pm.expect(jsonData.messages[2]).to.include(\"Action date is required\");",
                  "    pm.expect(jsonData.messages[2]).to.include(\"Source system is required\");",
                  "    pm.expect(jsonData.isSuccess).to.be.false;",
                  "});"
                ],
                "_lastExecutionId": "1f7a4f67-d84e-44d6-9946-dbbf7387461e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2b82f580-c9fb-41ef-9801-037913be3188",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "112",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"\",\r\n  \"action\": \"\",\r\n   \"actionDateTime\": \"\",\r\n  \"status\": \"\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "2e419dc2-eb8a-48ec-bb4b-765f8141ddd7",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:29 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              65,
              99,
              116,
              105,
              111,
              110,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              83,
              116,
              97,
              116,
              117,
              115,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              83,
              111,
              117,
              114,
              99,
              101,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 17,
          "responseSize": 115
        },
        "id": "641e54da-ccd9-492a-8ec3-6c34f618296a",
        "assertions": [
          {
            "assertion": "No status test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ef2b4eb4-ec5a-42c6-a2c6-38159ac74195",
          "length": 21,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "34047e1e-c4bf-45ad-9c3c-ea6ba115f43e"
        },
        "item": {
          "id": "329759d3-80dd-4df8-ab09-627e64b87a51",
          "name": "Incorrect source system test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"Ring Central\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Incorrect source system test\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "     ",
                  "    const jsonData = pm.response.json();",
                  "    ",
                  "    pm.expect(jsonData.messages[0]).to.include(\"Value Ring Central is not allowed for field Source System\");",
                  "",
                  "    pm.expect(jsonData.isSuccess).to.be.false;",
                  "});"
                ],
                "_lastExecutionId": "20f7208c-294a-4841-8661-25f14e0071d5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c199c5f9-a7ec-4b92-a39e-11eb177295ea",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "163",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"Ring Central\",\r\n  \"action\": \"engineer\",\r\n \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "3377eaa1-1f8c-46c1-b5bc-29de7e4f446d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:30 GMT"
            },
            {
              "key": "Content-Length",
              "value": "105"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              86,
              97,
              108,
              117,
              101,
              32,
              82,
              105,
              110,
              103,
              32,
              67,
              101,
              110,
              116,
              114,
              97,
              108,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              102,
              105,
              101,
              108,
              100,
              32,
              83,
              111,
              117,
              114,
              99,
              101,
              32,
              83,
              121,
              115,
              116,
              101,
              109,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 34,
          "responseSize": 105
        },
        "id": "329759d3-80dd-4df8-ab09-627e64b87a51",
        "assertions": [
          {
            "assertion": "Incorrect source system test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2bc12e01-683c-483d-8de6-9750e9ac384e",
          "length": 21,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ed22d510-df97-465a-85ba-658a104d29bc"
        },
        "item": {
          "id": "734f467a-db08-44eb-98a5-893388cd9fe7",
          "name": "Incorrect action test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"$%#$%#$^%#\",\r\n \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Incorrect action test\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "     ",
                  "    const jsonData = pm.response.json();",
                  "    const requestBody = JSON.parse(pm.request.body);",
                  "    pm.expect(jsonData.messages[0]).to.include(\"Action successfully added for client \" + requestBody.clientId);",
                  "",
                  "    pm.expect(jsonData.isSuccess).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "07651800-f24e-4ab3-a682-a4e467276490"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fd9735b9-9d54-4a91-8f1c-22d820a4e74d",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "164",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"$%#$%#$^%#\",\r\n \"actionDateTime\": \"2021-07-13 14:29:06\",\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "d4fa09a6-8ad7-4a89-b311-10526228c132",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:30 GMT"
            },
            {
              "key": "Content-Length",
              "value": "93"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              65,
              99,
              116,
              105,
              111,
              110,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              32,
              97,
              100,
              100,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              99,
              108,
              105,
              101,
              110,
              116,
              32,
              56,
              48,
              55,
              57,
              54,
              52,
              53,
              48,
              49,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 35,
          "responseSize": 93
        },
        "id": "734f467a-db08-44eb-98a5-893388cd9fe7",
        "assertions": [
          {
            "assertion": "Incorrect action test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a91fe67d-bbfb-43f5-bee4-fd2c359862d7",
          "length": 21,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "275e8537-5b26-4bd2-828b-3e384385f943"
        },
        "item": {
          "id": "513877cf-fbd2-4afa-9428-48d68a6542b8",
          "name": "Incorrect action date test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"{{incorrectDateTime}}\",\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Incorrect action date test\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "     ",
                  "    const jsonData = pm.response.json();",
                  "    const requestBody = JSON.parse(pm.request.body);",
                  "    pm.expect(jsonData.messages[0]).to.include(\"Date \" + requestBody.actionDateTime + \" is not a valid datetime\");",
                  "",
                  "    pm.expect(jsonData.isSuccess).to.be.false;",
                  "});"
                ],
                "_lastExecutionId": "82652f0b-9866-4b46-9479-516ccdad7cb3"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                "type": "text/javascript",
                "exec": [
                  "var moment = require('moment');",
                  "",
                  "incorrectDateTime = moment().format('DD-MM-YYYY HH:MM:SS');",
                  "pm.variables.set('incorrectDateTime', incorrectDateTime);"
                ],
                "_lastExecutionId": "9d0eb482-f824-42cb-82dd-0c747990ee8b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ad448090-5d1d-4067-aa42-6c741629a4cf",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "162",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"exploit\",\r\n  \"actionDateTime\": \"15-07-2021 10:07:94\",\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "7965caab-b6d6-4622-9da9-8e6463063ef4",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:31 GMT"
            },
            {
              "key": "Content-Length",
              "value": "96"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              68,
              97,
              116,
              101,
              32,
              49,
              53,
              45,
              48,
              55,
              45,
              50,
              48,
              50,
              49,
              32,
              49,
              48,
              58,
              48,
              55,
              58,
              57,
              52,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              32,
              118,
              97,
              108,
              105,
              100,
              32,
              100,
              97,
              116,
              101,
              116,
              105,
              109,
              101,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 21,
          "responseSize": 96
        },
        "id": "513877cf-fbd2-4afa-9428-48d68a6542b8",
        "assertions": [
          {
            "assertion": "Incorrect action date test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1023bbe2-7a3b-4222-a272-5eb580ad3aca",
          "length": 21,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d0a9f95a-873d-4607-8781-05cc31ae6ad9"
        },
        "item": {
          "id": "605ab6a1-1175-4627-930f-48f60bc212cf",
          "name": "Future action date test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "V2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n   \"actionDateTime\": \"{{futureDateTime}}\",\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Future action date test\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "     ",
                  "    const jsonData = pm.response.json();",
                  "    const requestBody = JSON.parse(pm.request.body);",
                  "    pm.expect(jsonData.messages[0]).to.include(\"ActionDateTime \" + requestBody.actionDateTime + \" cannot be future date\");",
                  "",
                  "    pm.expect(jsonData.isSuccess).to.be.false;",
                  "});"
                ],
                "_lastExecutionId": "cac6b0b2-0078-4af3-8946-74aab3640de5"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                "type": "text/javascript",
                "exec": [
                  "var moment = require('moment');",
                  "",
                  "var futureDateTime = moment().add(5,'days').format('YYYY-MM-DD 00:00:00');",
                  "pm.variables.set('futureDateTime', futureDateTime);"
                ],
                "_lastExecutionId": "d15ecd92-706c-4d63-a48b-6c50ca55ee26"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "V2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fa15cf92-bbab-4232-a563-c6396d40158e",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "163",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"empower\",\r\n   \"actionDateTime\": \"2021-07-20 00:00:00\",\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "60d9f4c0-4030-4af6-a925-e7eda08b7bbb",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:33 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              65,
              99,
              116,
              105,
              111,
              110,
              68,
              97,
              116,
              101,
              84,
              105,
              109,
              101,
              32,
              50,
              48,
              50,
              49,
              45,
              48,
              55,
              45,
              50,
              48,
              32,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              32,
              99,
              97,
              110,
              110,
              111,
              116,
              32,
              98,
              101,
              32,
              102,
              117,
              116,
              117,
              114,
              101,
              32,
              100,
              97,
              116,
              101,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 22,
          "responseSize": 104
        },
        "id": "605ab6a1-1175-4627-930f-48f60bc212cf",
        "assertions": [
          {
            "assertion": "Future action date test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "46346fc1-6f01-427e-b91a-dbaf1ccdc734",
          "length": 21,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7e20eca5-6bcf-4d2d-b545-64f94103fd8a"
        },
        "item": {
          "id": "c1662a24-2737-4d84-9a72-c68bc3f7a0d0",
          "name": "Current action date test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"{{now}}\",\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Current action date test\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "     ",
                  "    const jsonData = pm.response.json();",
                  "    const requestBody = JSON.parse(pm.request.body);",
                  "    pm.expect(jsonData.messages[0]).to.include(\"Action successfully added for client \" + requestBody.clientId);",
                  "",
                  "",
                  "    pm.expect(jsonData.isSuccess).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "2d00b497-45b1-497a-a7e8-a78233ae37c9"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                "type": "text/javascript",
                "exec": [
                  "var moment = require('moment');",
                  "",
                  "now = moment().format('YYYY-MM-DD 00:00:00');",
                  "pm.variables.set('now', now);"
                ],
                "_lastExecutionId": "46657d4f-7112-4f6f-a806-d8c685f42f88"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3bb6de58-3f9f-4f1f-a8cc-1ba7d580d420",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "164",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"visualize\",\r\n  \"actionDateTime\": \"2021-07-15 00:00:00\",\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "032d1c94-f964-4d2c-938f-d7c19c0aa484",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:33 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              65,
              99,
              116,
              105,
              111,
              110,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              32,
              97,
              100,
              100,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              99,
              108,
              105,
              101,
              110,
              116,
              32,
              56,
              48,
              55,
              57,
              54,
              52,
              53,
              48,
              49,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 27,
          "responseSize": 93
        },
        "id": "c1662a24-2737-4d84-9a72-c68bc3f7a0d0",
        "assertions": [
          {
            "assertion": "Current action date test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "49495557-0898-4a7b-8e1c-4f7d6e14e106",
          "length": 21,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "74e36478-dc33-4f54-a3c8-a3f1bc5de0d5"
        },
        "item": {
          "id": "5b3b07c6-7212-4346-ad2c-b610522a3ba6",
          "name": "Incorrect status test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"{{now}}\",\r\n  \"status\": \"started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Current action date test\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "     ",
                  "    const jsonData = pm.response.json();",
                  "    const requestBody = JSON.parse(pm.request.body);",
                  "    pm.expect(jsonData.messages[0]).to.include(\"Value \" + requestBody.status + \" is not allowed for field Status\");",
                  "",
                  "",
                  "    pm.expect(jsonData.isSuccess).to.be.false;",
                  "});"
                ],
                "_lastExecutionId": "e0650012-296c-44ae-9f0c-8b53bd45280e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                "type": "text/javascript",
                "exec": [
                  "var moment = require('moment');",
                  "",
                  "now = moment().format('YYYY-MM-DD HH:MM:SS');",
                  "pm.variables.set('now', now);"
                ],
                "_lastExecutionId": "dec0acb6-fbfb-4c08-9fa5-03323a32e07a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "badb8177-8bef-489c-97b5-a6f5e5c24063",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "158",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"whiteboard\",\r\n  \"actionDateTime\": \"2021-07-15 10:07:80\",\r\n  \"status\": \"started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "96bad5df-63bb-44c5-83f4-db8422d4e719",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:34 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              86,
              97,
              108,
              117,
              101,
              32,
              115,
              116,
              97,
              114,
              116,
              101,
              100,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              102,
              105,
              101,
              108,
              100,
              32,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              44,
              34,
              68,
              97,
              116,
              101,
              32,
              50,
              48,
              50,
              49,
              45,
              48,
              55,
              45,
              49,
              53,
              32,
              49,
              48,
              58,
              48,
              55,
              58,
              56,
              48,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              32,
              118,
              97,
              108,
              105,
              100,
              32,
              100,
              97,
              116,
              101,
              116,
              105,
              109,
              101,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 21,
          "responseSize": 144
        },
        "id": "5b3b07c6-7212-4346-ad2c-b610522a3ba6",
        "assertions": [
          {
            "assertion": "Current action date test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8281d894-4ea1-422e-a6d2-20bfe766bcc8",
          "length": 21,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6bc867e8-2ca9-47fc-aaae-4af5f507303f"
        },
        "item": {
          "id": "6dfba414-f22c-4ca1-af55-83b0527410e0",
          "name": "Valid status action started test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"{{now}}\",\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Current action date test\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "     ",
                  "    const jsonData = pm.response.json();",
                  "    const requestBody = JSON.parse(pm.request.body);",
                  "     pm.expect(jsonData.messages[0]).to.include(\"Action successfully added for client \" + requestBody.clientId);",
                  "",
                  "",
                  "    pm.expect(jsonData.isSuccess).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "ec5c70eb-c0d2-4b60-bc45-5046f37b6a62"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                "type": "text/javascript",
                "exec": [
                  "var moment = require('moment');",
                  "",
                  "now = moment().format('YYYY-MM-DD 00:00:00');",
                  "pm.variables.set('now', now);"
                ],
                "_lastExecutionId": "0b5bc030-5ccd-4ea0-878c-f7752f35464c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b7bf8d32-c530-47d9-8ea1-2718612dba8d",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "161",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"evolve\",\r\n  \"actionDateTime\": \"2021-07-15 00:00:00\",\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "1a88bd41-3f32-4cce-a5b6-060cd161e0eb",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:34 GMT"
            },
            {
              "key": "Content-Length",
              "value": "93"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              65,
              99,
              116,
              105,
              111,
              110,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              32,
              97,
              100,
              100,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              99,
              108,
              105,
              101,
              110,
              116,
              32,
              56,
              48,
              55,
              57,
              54,
              52,
              53,
              48,
              49,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 26,
          "responseSize": 93
        },
        "id": "6dfba414-f22c-4ca1-af55-83b0527410e0",
        "assertions": [
          {
            "assertion": "Current action date test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c3db3514-104e-4a6b-8173-48c8774bae6b",
          "length": 21,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "998ec2b9-5db3-477c-9342-8403ac666795"
        },
        "item": {
          "id": "e1dbca9b-34af-4790-9d57-0f0edfeee841",
          "name": "Valid status action completed test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n \"actionDateTime\": \"{{now}}\",\r\n  \"status\": \"Action Completed\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Current action date test\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "     ",
                  "    const jsonData = pm.response.json();",
                  "    const requestBody = JSON.parse(pm.request.body);",
                  "     pm.expect(jsonData.messages[0]).to.include(\"Action successfully added for client \" + requestBody.clientId);",
                  "",
                  "",
                  "    pm.expect(jsonData.isSuccess).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "16451ad6-1162-4607-b92f-f8329f745138"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                "type": "text/javascript",
                "exec": [
                  "var moment = require('moment');",
                  "",
                  "now = moment().format('YYYY-MM-DD 00:00:00');",
                  "pm.variables.set('now', now);"
                ],
                "_lastExecutionId": "3f81e8e0-a59f-440d-bd16-887c4b918b28"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "15f1523a-fce5-4f8c-9a37-50cf6751ee1b",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "170",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"RingCentral\",\r\n  \"action\": \"reintermediate\",\r\n \"actionDateTime\": \"2021-07-15 00:00:00\",\r\n  \"status\": \"Action Completed\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "2ece07d0-54de-4cff-8ce4-50f65055e4a2",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:36 GMT"
            },
            {
              "key": "Content-Length",
              "value": "93"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              65,
              99,
              116,
              105,
              111,
              110,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              32,
              97,
              100,
              100,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              99,
              108,
              105,
              101,
              110,
              116,
              32,
              56,
              48,
              55,
              57,
              54,
              52,
              53,
              48,
              49,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 53,
          "responseSize": 93
        },
        "id": "e1dbca9b-34af-4790-9d57-0f0edfeee841",
        "assertions": [
          {
            "assertion": "Current action date test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2bf29e73-a714-4ff8-94cc-033c609cfbbc",
          "length": 21,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9a07e3aa-5862-4ace-ab4c-6201944d5925"
        },
        "item": {
          "id": "6f626d61-d47f-4fd5-b194-e02cce1cec62",
          "name": "Valid test",
          "request": {
            "url": {
              "path": [
                "api",
                "Actions",
                "v2",
                "AddAction"
              ],
              "host": [
                "{{ccm}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"SwiftDigital\",\r\n  \"action\": \"{{$randomBsBuzz}}\",\r\n  \"actionDateTime\": \"{{now}}\",\r\n  \"status\": \"Action started\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056c21b1-525b-4b6d-a99c-5156d0a258a7",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Current action date test\", () => {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "     ",
                  "    const jsonData = pm.response.json();",
                  "    const requestBody = JSON.parse(pm.request.body);",
                  "     pm.expect(jsonData.messages[0]).to.include(\"Action successfully added for client \" + requestBody.clientId);",
                  "",
                  "",
                  "    pm.expect(jsonData.isSuccess).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "f65f2577-2a63-42ec-8657-07881f9c3de9"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d9b2e0db-9f8e-48ac-8413-889d2a22ad4e",
                "type": "text/javascript",
                "exec": [
                  "var moment = require('moment');",
                  "",
                  "now = moment().format('YYYY-MM-DD 00:00:00');",
                  "pm.variables.set('now', now);"
                ],
                "_lastExecutionId": "6adb80c0-4fd1-402e-b02e-86876c6d4e8d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ccm",
              "api",
              "Actions",
              "v2",
              "AddAction"
            ],
            "host": [
              "intg-mcro",
              "internal",
              "lgsuper",
              "org"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Basic YnNocmVlOmVoVXMkOTY5N2ZXQy1KeUwhSw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.28.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7d4ef348-3fd3-49e4-9f6c-86da75bed323",
              "system": true
            },
            {
              "key": "Host",
              "value": "intg-mcro.internal.lgsuper.org",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "165",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"clientId\": 807964501,\r\n  \"sourceSystem\": \"SwiftDigital\",\r\n  \"action\": \"synergize\",\r\n  \"actionDateTime\": \"2021-07-15 00:00:00\",\r\n  \"status\": \"Action started\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "ehUs$9697fWC-JyL!K",
                "key": "password"
              },
              {
                "type": "string",
                "value": "bshree",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "05e8785f-4bf0-4c8a-883d-3f21469d5f97",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Server",
              "value": "Microsoft-IIS/10.0"
            },
            {
              "key": "X-Powered-By",
              "value": "ASP.NET"
            },
            {
              "key": "Date",
              "value": "Thu, 15 Jul 2021 00:23:37 GMT"
            },
            {
              "key": "Content-Length",
              "value": "93"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              99,
              111,
              114,
              100,
              73,
              100,
              34,
              58,
              48,
              44,
              34,
              105,
              115,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              115,
              34,
              58,
              91,
              34,
              65,
              99,
              116,
              105,
              111,
              110,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              108,
              121,
              32,
              97,
              100,
              100,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              99,
              108,
              105,
              101,
              110,
              116,
              32,
              56,
              48,
              55,
              57,
              54,
              52,
              53,
              48,
              49,
              34,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 25,
          "responseSize": 93
        },
        "id": "6f626d61-d47f-4fd5-b194-e02cce1cec62",
        "assertions": [
          {
            "assertion": "Current action date test",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 1473
    },
    "failures": [],
    "error": null
  }
}